<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.0.0">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2021-01-19T17:48:03-03:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">Leonardo Benedeti</title><subtitle>Meu site e base de conhecimento</subtitle><author><name>Leonardo Benedeti</name></author><entry><title type="html">Pruuu App</title><link href="http://localhost:4000/pruuu-app" rel="alternate" type="text/html" title="Pruuu App" /><published>2020-11-12T00:00:00-03:00</published><updated>2020-11-12T16:00:00-03:00</updated><id>http://localhost:4000/pruuu-app</id><content type="html" xml:base="http://localhost:4000/pruuu-app">&lt;p&gt;Recentemente, participei de um processo seletivo para uma empresa e para ser avaliado tecnicamente o desafio era criar uma app, utilizando detalhes específicos da empresa que criou o desafio.&lt;/p&gt;

&lt;p&gt;Questionei a recrutadora sobre a possibilidade de criar um app sem vínculos com a empresa para manter esse app como desafio para outras oportunidades também. E também porque gostei do desafio e acabei empolgando rsrs&lt;/p&gt;

&lt;h3 id=&quot;contexto-do-desafio&quot;&gt;Contexto do desafio:&lt;/h3&gt;

&lt;p&gt;Criar um microblog onde você tenha uma mecanica parecida com a do Twitter mas com uma nova identidade e é claro, feito em Flutter.&lt;/p&gt;

&lt;h3 id=&quot;contexto-do-que-foi-prototipado&quot;&gt;Contexto do que foi prototipado:&lt;/h3&gt;

&lt;p&gt;Antes das redes sociais, para você saber das novidades e comentar as suas próprias, tudo era falado pessoalmente e o lugar mais adequado para esse tipo de interação eram as praças.&lt;/p&gt;

&lt;p&gt;Daí trazendo o contexto para dentro do app vinculando com o twitter, que tem um pássaro como logo, pensei numa identidade toda voltada para o bicho mais populoso das praças, o POMBO. rsrsrs&lt;/p&gt;

&lt;p&gt;Com isso criei uma interface simples, com apenas duas cores e com imagens trazendo a identidade de pombos para cada ação.&lt;/p&gt;

&lt;h3 id=&quot;protótipo-criado&quot;&gt;Protótipo criado&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;./assets/img/pruuu/prototipo.png&quot; alt=&quot;Imagem do protótipo&quot; /&gt;&lt;/p&gt;

&lt;p&gt;No momento da escrita deste post, o projeto já se encontra funcional e rodando a plenos pulmões.&lt;/p&gt;

&lt;p&gt;O preço do download e teste do app é enviar o feedback, sendo falando o que achou ou caso tenha encontrado algum erro. =D&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/leonardobenedeti/flutter-app-pruuu-microblog/blob/master/binaries/app-release.apk?raw=true&quot; target=&quot;_blank&quot;&gt;Baixar apk&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Para ver como está sendo feito, acesse o link abaixo e veja tudo no repositório, claro, está ficando tudo aberto.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/leonardobenedeti/flutter-app-pruuu-microblog&quot; target=&quot;_blank&quot;&gt;Repositório do Pruuu&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;PS.: Evitem Pull Requests. Porque ? Como é um app que estou criando para mostrar o que o Leonardo Benedeti sabe, eu incluir código criado por outras pessoas é maneiro no contexto código aberto, mas pode gerar confusão quando eu for ser avaliado. =D&lt;/p&gt;</content><author><name>Leonardo Benedeti</name></author><category term="flutter" /><category term="android" /><category term="ios" /><category term="ux" /><category term="ui" /><category term="branding" /></entry><entry><title type="html">Clone do app PicPay usando Flutter</title><link href="http://localhost:4000/picpay-clone-using-flutter" rel="alternate" type="text/html" title="Clone do app PicPay usando Flutter" /><published>2019-10-28T00:00:00-03:00</published><updated>2019-10-28T16:00:00-03:00</updated><id>http://localhost:4000/picpay-clone-using-flutter</id><content type="html" xml:base="http://localhost:4000/picpay-clone-using-flutter">&lt;p&gt;“Um belo dia resolvi mudar e fazer tudo o que eu queria fazer”&lt;/p&gt;

&lt;p&gt;Sim. Em um dia, não tão belo como na música, decidi me aventurar e criar algo bacana usando Flutter.&lt;/p&gt;

&lt;p&gt;Participo de alguns grupos que fazem apps de exemplo, para mostrar arquiteturas e boas práticas, criando clones de apps já existentes.&lt;/p&gt;

&lt;p&gt;Com essa ideia em mente procurei algum app que ainda não tivesse sido clonado e não vi nenhum clone do PicPay, o canivete suíço dos pagamentos.&lt;/p&gt;

&lt;p&gt;Uso muito o app no meu dia a dia e foi uma motivação maior ainda replicar um app tão bom, que imagino que seja nativo, utilizando o Flutter.&lt;/p&gt;

&lt;p&gt;Como ponto de partida, tirei um print do meu celular e decidi recriar apenas a home do app, que mostra:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Saldo&lt;/li&gt;
  &lt;li&gt;Lista de pessoas&lt;/li&gt;
  &lt;li&gt;Tabs de transações, minhas e das pessoas que sigo&lt;/li&gt;
  &lt;li&gt;A lista referente as tabs&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Print do app original. 
&lt;img src=&quot;assets/img/picpay/original.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Seguindo para o desenvolvimento.&lt;/p&gt;

&lt;p&gt;Iniciei o projeto em um horário vago no período de trabalho, mas só consegui dar continuidade a noite em casa, devido a tarefas do trabalho.&lt;/p&gt;

&lt;p&gt;Seguindo assim, podemos analisar os ajustes a cada commit que fiz. Os detalhes dos commits vocês podem ver no repo. =D&lt;/p&gt;

&lt;p&gt;Primeiro ajuste: Apenas ajustes no app que o flutter te entrega pronto, inclusão de cores e ícones na title bar.
&lt;img src=&quot;assets/img/picpay/commits/1.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Segundo ajuste: Aqui tivemos uma mudança mais considerável, ajustei o header para sliver e customizei o title para fazer o ‘Meu Saldo’ e já adicionei os containers para os próximos ajustes.
&lt;img src=&quot;assets/img/picpay/commits/2.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Terceiro ajuste: Aqui iniciei a criação das listas de atividades e dos cards. Dei uma boeira na cor da tab também. era pra alterar a cor do indicator apenas mas alterei do container. #mybad
&lt;img src=&quot;assets/img/picpay/commits/3.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Quarto Ajuste: Cores devidamente ajustadas e card construido.
&lt;img src=&quot;assets/img/picpay/commits/4.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Quinto ajuste: Inclusão da lista de sugestões de contato para efetuar um pagamento.
&lt;img src=&quot;assets/img/picpay/commits/5.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Sexto ajuste: Inclusão de mais itens na lista e inclusão de icones printados do app original
&lt;img src=&quot;assets/img/picpay/commits/6.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Sétimo ajuste: Remover a necessidade da safe area na parte de baixo do layout. 
&lt;img src=&quot;assets/img/picpay/commits/7.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;E para comparar com o layout original vamos com uma imagem lado a lado.&lt;/p&gt;
&lt;div class=&quot;grid&quot;&gt;
    &lt;div class=&quot;a img&quot;&gt;
        &lt;img src=&quot;assets/img/picpay/original.png&quot; alt=&quot;&quot; /&gt;
    &lt;/div&gt;
    &lt;div class=&quot;b img&quot;&gt;
        &lt;img src=&quot;assets/img/picpay/clone.png&quot; alt=&quot;&quot; /&gt;
    &lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;Vale ressaltar. Criei aqui apenas a UI da home do PicPay, não me importei com algumas coisas, como arquitetura, boas práticas, BLoC e affins…&lt;/p&gt;

&lt;p&gt;Queria deixar a UI mais próxima possível do app original para me testar neste quesito.&lt;/p&gt;

&lt;p&gt;Quando tiver um pouco mais de tempo, pretendo plugar uma consulta a algum backend, que provavelmente eu vou criar também, e ai sim, plugar tudo que tiver de boas práticas, loadings e tudo mais pra deixar o app dinâmico.&lt;/p&gt;

&lt;p&gt;E pra quem não conhece o PicPay, da uma olhada ai que vale a pena usar.&lt;/p&gt;

&lt;p&gt;Aqui vai um convite pra você: &lt;a href=&quot;http://www.picpay.com/convite?@331X&quot; target=&quot;_blank&quot;&gt;http://www.picpay.com/convite?@331X&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;O código completo do app você pode conferir no meu repositório com todos os detalhes.&lt;br /&gt;
&lt;a href=&quot;https://github.com/leonardobenedeti/picpay_clone_flutter&quot; target=&quot;_blank&quot;&gt;https://github.com/leonardobenedeti/picpay_clone_flutter&lt;/a&gt;&lt;/p&gt;</content><author><name>Leonardo Benedeti</name></author><category term="flutter" /><category term="android" /><category term="ios" /></entry><entry><title type="html">[Tutorial] - Email sender with Sendgrid on Heroku</title><link href="http://localhost:4000/heroku-mail-sender-with-sendgrid" rel="alternate" type="text/html" title="[Tutorial] - Email sender with Sendgrid on Heroku" /><published>2019-10-07T00:00:00-03:00</published><updated>2019-10-07T16:00:00-03:00</updated><id>http://localhost:4000/heroku-mail-sender-with-sendgrid</id><content type="html" xml:base="http://localhost:4000/heroku-mail-sender-with-sendgrid">&lt;p&gt;Pensando como melhorar algumas plataformas que tenho online encontrei o Sendgrid dentro do nosso velho amigo Heroku.&lt;/p&gt;

&lt;p&gt;A Sendgrid é uma plataforma de envio de emails transacionais e de marketing.&lt;/p&gt;

&lt;p&gt;Abaixo vão dois links explicando melhor os detalhes:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://sendgrid.com/&quot; target=&quot;_blank&quot;&gt;Site oficial&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://elements.heroku.com/addons/sendgrid&quot; target=&quot;_blank&quot;&gt;Link para o add-on dentro do heroku&lt;/a&gt;(recomendo vir por aqui)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Agora já conhecendo melhor a plataforma, vamos configurar tudo para criar nossos emails transacionais.&lt;/p&gt;

&lt;p&gt;O primeiro passo é provisionar o add-on do Sendgrid dentro do Heroku.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;assets/img/sendgrid/1.0-provision-heroku.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Com o add-on configurado essa é o dashboard da plataforma.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;assets/img/sendgrid/2.0-dashboard.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Dentro do dashboard precisamos realizar duas configurações básicas são:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;1 - Criar uma api key no dashboard 
&lt;br /&gt;&lt;a href=&quot;https://app.sendgrid.com/settings/api_keys&quot; target=&quot;_blank&quot;&gt;Settings &amp;gt; API KEY&lt;/a&gt;
&lt;img src=&quot;assets/img/sendgrid/3.0-config-api-key.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;2 - Configurar a api key como variável no heroku
&lt;img src=&quot;assets/img/sendgrid/4.0-config-api-on-heroku.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Após as configurações básicas precisamos criar e testar um template ainda pelo dashboard&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Menu de templates
&lt;img src=&quot;assets/img/sendgrid/5.0-menu-templates.png&quot; alt=&quot;&quot; /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Aqui basta criar o template como preferir, usando a interface de arrasta e solta ou usando HTML&lt;/p&gt;

&lt;p&gt;Após criar o template precisamos testar e pra isso na própria plataforma temos um sandbox para enviar o email.
&lt;img src=&quot;assets/img/sendgrid/6.0-preview-and-test-template.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Ao enviar o email via sandbox, podemos conferir a caixa de entrada do email escolhido para receber o teste.
&lt;img src=&quot;assets/img/sendgrid/7.0-first-test-by-preview.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Podemos perceber que a variável user ainda está sem preenchimento. Vamos agora criar o backend para enviar o email de forma transacional.&lt;/p&gt;

&lt;h3 id=&quot;nodejs&quot;&gt;NodeJs&lt;/h3&gt;

&lt;p&gt;Para exemplificar o uso da plataforma criei um projeto e estou mantendo no meu github.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/leonardobenedeti/heroku-mail-sender&quot; target=&quot;_blank&quot;&gt;
  Link do repo
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Ou você pode ‘deployar’ direto no heroku clicando abaixo&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://heroku.com/deploy?template=https://github.com/leonardobenedeti/heroku-mail-sender&quot; target=&quot;_blank&quot;&gt;
  &lt;img src=&quot;https://www.herokucdn.com/deploy/button.svg&quot; alt=&quot;Deploy&quot; /&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;A base do código é o que busquei na doc oficial do Sendgrid para nodejs.&lt;/p&gt;

&lt;p&gt;Import e configuração da API KEY que criamos anteriormente.&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;sgMail&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;@sendgrid/mail&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;sgMail&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;setApiKey&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;process&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;env&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;SENDGRID_APIKEY&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Código base utilizando o template que criamos enviando todos os parametros no request.&lt;/p&gt;
&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;post&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;/sendmail/template&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;req&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;res&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;to&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;template_data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;req&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;body&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;msg&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;to&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;to&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;from&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;templateId&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;d-ee4c43022cc74cec802e5398cb54a31f&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;dynamic_template_data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;template_data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;sgMail&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;send&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;msg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;success&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;res&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;status&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;200&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;send&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;success&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Email enviado com sucesso&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}).&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;catch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;err&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;res&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;status&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;400&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;send&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Algo de errado não está certo no envio de emails.&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}));&lt;/span&gt; 
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Com todo código configurado e rodando localmente vamos aos testes via postman.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;assets/img/sendgrid/8.0-request-postman.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Após o teste, podemos perceber que o parametro de usuário foi preenchido de acordo com o request via postman.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;assets/img/sendgrid/9.0-result-postman.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Dai pra frente, precisamos criar um template customizado para cada caso e transacionar como preferir. =D&lt;/p&gt;</content><author><name>Leonardo Benedeti</name></author><category term="heroku" /><category term="node.js" /><category term="sendgrid" /></entry><entry><title type="html">[POC] - Swipe up component com Ionic</title><link href="http://localhost:4000/poc-swipeup-components-ionic3" rel="alternate" type="text/html" title="[POC] - Swipe up component com Ionic" /><published>2019-09-10T00:00:00-03:00</published><updated>2019-09-10T16:00:00-03:00</updated><id>http://localhost:4000/poc-swipeup-components-ionic3</id><content type="html" xml:base="http://localhost:4000/poc-swipeup-components-ionic3">&lt;p&gt;Trabalhando em um projeto de curioso, ‘precisei’ fazer um swipe up em android nativo, com uma lib resolvi o problema e vida que segue.&lt;/p&gt;

&lt;p&gt;Porém fiquei curioso em saber se o Ionic seria capaz de fazer a mesma coisa.&lt;/p&gt;

&lt;p&gt;Iniciando uma busca, encontrei muita coisa mas nada funcionou 100% até encontrar esse tutorial que mostra como fazer e de uma maneira tão simples que vou deixar a referência logo no início.
&lt;a href=&quot;https://www.joshmorony.com/how-to-create-a-sliding-drawer-component-for-ionic-2/&quot; target=&quot;_blank&quot;&gt;Post referência&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;No post ele comenta um pouco sobre manipulação de DOM e como utilizar o &lt;a href=&quot;https://hammerjs.github.io/&quot;&gt;Hammer.js&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;No post original ele faz apenas o swipe, para abrir e fechar. Porém eu queria algumas coisa a mais.&lt;/p&gt;

&lt;p&gt;Como:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Abrir o componente clicando, mantendo o efeito&lt;/li&gt;
  &lt;li&gt;Abrir o componente clicando em um botão fora do contexto do componente&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Brinde:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Ajustar o css para ficar parecido com o componente normalmente usado nos apps atuais&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Listando as tarefas, vamos ao que precisei alterar.&lt;/p&gt;

&lt;h4 id=&quot;abrir-o-componente-clicando-mantendo-o-efeito&quot;&gt;Abrir o componente clicando, mantendo o efeito&lt;/h4&gt;

&lt;p&gt;Usando os eventos do Hammer.js apenas precisei incluir o &lt;code class=&quot;highlighter-rouge&quot;&gt;tap&lt;/code&gt; na lista de eventos para funcionar. Suave!&lt;/p&gt;

&lt;div class=&quot;language-typescript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;hammer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;tap&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ev&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;O método &lt;code class=&quot;highlighter-rouge&quot;&gt;open()&lt;/code&gt; utiliza o DomController para manipular e animar o que precisamos, da seguinte maneira:&lt;/p&gt;

&lt;div class=&quot;language-typescript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt; 
    &lt;span class=&quot;c1&quot;&gt;// Este metodo já existia no tutorial original, apenas isolei em um método para controlar 'por fora'&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;domCtrl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;write&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;renderer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;setElementStyle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;element&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;nativeElement&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;transition&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;top 0.5s&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;renderer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;setElementStyle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;element&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;nativeElement&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;top&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;  &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;handleTop&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;px&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Com isso consegui com um clique na tela abrir o componente com o mesmo efeito do swipe. TOP.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Próximo…&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h4 id=&quot;abrir-o-componente-clicando-em-um-botão-fora-do-contexto-do-componente-com-parametros&quot;&gt;Abrir o componente clicando em um botão fora do contexto do componente, com parametros&lt;/h4&gt;

&lt;p&gt;Aqui tinha um desafio maior, sem nada na doc, afinal, estava fora do contexto do Hammer.js para conseguir manipular.&lt;/p&gt;

&lt;p&gt;Com isso precisei recorrer ao Events do angular para fazer essa comunicação entre componentes.&lt;/p&gt;

&lt;p&gt;Código da page home, envia o evento para algum lugar do app que escute.&lt;/p&gt;

&lt;div class=&quot;language-typescript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;callDetails&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;events&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;publish&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;dados&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Dados via parametro&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Código do componente onde o listener fica esperando o evento para iniciar o método &lt;code class=&quot;highlighter-rouge&quot;&gt;open()&lt;/code&gt;.&lt;/p&gt;

&lt;div class=&quot;language-typescript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;constructor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kr&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;events&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Events&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;cm&quot;&gt;/* outros controllers...*/&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;events&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;subscribe&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;details&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;dados&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// olha ele ai de novo. =D&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;Mais uma pra dentro.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h4 id=&quot;ajustar-o-css-para-ficar-parecido-com-o-componente-normalmente-usado-nos-apps-atuais&quot;&gt;Ajustar o css para ficar parecido com o componente normalmente usado nos apps atuais&lt;/h4&gt;

&lt;p&gt;O &lt;code class=&quot;highlighter-rouge&quot;&gt;css&lt;/code&gt; do exemplo original, é literalmente um quadrado que faz o swipe up com o conteúdo da página.&lt;/p&gt;

&lt;p&gt;Para o exemplo que eu estava trabalhando precisei alterar isso um pouco.&lt;/p&gt;

&lt;p&gt;Exemplo do Josh:
&lt;img src=&quot;assets/img/ionic-swipe-up/example-josh.gif&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Vamos aos ajustes que fiz. Pouca coisa mas já deu uma diferença e mostra o que podemos ajustar para ficar do gosto que precisamos.&lt;/p&gt;

&lt;div class=&quot;language-scss highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;content-drawer&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;background&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;map-get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$colors&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'primary'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;100%&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;100%&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;position&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;absolute&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;z-index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;10&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;important&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;box-shadow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0px&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;-4px&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;22px&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;-8px&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;rgba&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;.75&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;border-radius&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;20px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;text-align&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;center&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;map-get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$colors&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'light'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    
    &lt;span class=&quot;nc&quot;&gt;.linha&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nl&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;40%&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;nl&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;4px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;nl&quot;&gt;margin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;16px&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;auto&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;40px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;nl&quot;&gt;border-radius&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;26px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;nl&quot;&gt;background&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;map-get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$colors&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'light'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Resultado com os ajustes de css acima:
&lt;img src=&quot;assets/img/ionic-swipe-up/result-leo.gif&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Com isso encerro o exemplo com os ajustes necessários.&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;brinde&quot;&gt;Brinde&lt;/h3&gt;

&lt;p&gt;Esse exemplo publiquei no gh-pages de maneira bem automática. Como?&lt;/p&gt;

&lt;p&gt;O github pages é um “server” que hospeda páginas estáticas, como esta que você está vendo.&lt;/p&gt;

&lt;p&gt;Para publicar um app web ionic temos alguns truques.&lt;/p&gt;

&lt;p&gt;Antes de qualquer truque precisamos instalar os packages para isso.&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;npm &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;angular-cli-ghpages &lt;span class=&quot;nt&quot;&gt;--save&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Após instalar basta colar esse código dentro de scripts para automatizar tudo. Build e deploy.&lt;/p&gt;

&lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nl&quot;&gt;&quot;scripts&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;gh-pages&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;ionic build --base-href 'https://leonardobenedeti.github.io/ionic3-swipe-up-component/' --prod &amp;amp;&amp;amp; npx ngh --dir=www/&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Com esse script, automaticamente o package do gh-pages cria a branch e publica tudo pra você. =D&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://leonardobenedeti.github.io/ionic3-swipe-up-component/&quot;&gt;Link do projeto publicado rodando&lt;/a&gt;&lt;/p&gt;</content><author><name>Leonardo Benedeti</name></author><category term="ionic" /><category term="github pages" /><category term="Hammer.js" /></entry><entry><title type="html">[Github PR] - Twitter UI Clone Bug fix</title><link href="http://localhost:4000/flutter-twitter-ui-clone-ug-fix" rel="alternate" type="text/html" title="[Github PR] - Twitter UI Clone Bug fix" /><published>2019-09-06T00:00:00-03:00</published><updated>2019-09-06T16:00:00-03:00</updated><id>http://localhost:4000/flutter-twitter-ui-clone-ug-fix</id><content type="html" xml:base="http://localhost:4000/flutter-twitter-ui-clone-ug-fix">&lt;h2 id=&quot;minha-primeira-aventura-flutter&quot;&gt;Minha “primeira” aventura Flutter&lt;/h2&gt;

&lt;p&gt;A título de curiosidade baixei um repo para entender mais sobre Flutter.&lt;/p&gt;

&lt;p&gt;Navegando encontrei esse post no medium&lt;br /&gt;
&lt;a href=&quot;https://medium.com/@diegoveloper/flutter-lets-know-the-scrollcontroller-and-scrollnotification-652b2685a4ac&quot; target=&quot;_blank&quot;&gt;Flutter: let’s know the ScrollController and ScrollNotification&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Estava procurando especificamente sobre como controlar a scrollview para emitir eventos enquanto o usuário estivesse scrollando a tela.&lt;/p&gt;

&lt;p&gt;Para minha grata surpresa, o repo além de ter o que eu procurava, encontrei um clone do Twitter, especificamente a UI da page de perfil, com efeitos e tudo.&lt;/p&gt;

&lt;p&gt;Ao tentar incluir em um projeto notei um bug ao scrollar as tabs do projeto original.&lt;/p&gt;

&lt;p&gt;Quando eu scrollava as tabs o avatar iniciava a animação, porém, não deveria acontecer isso.&lt;/p&gt;

&lt;p&gt;Problema:
&lt;img src=&quot;assets/videos/bug-scrolling-tabs.gif&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Esse bug me fez quase desistir da UI que antes considerei perfeita para o que estava criando para estudos.&lt;/p&gt;

&lt;p&gt;Mas como o Flutter é um toolkit desafiador e o Dart é intuitivo e simples, pensei: Porque não tentar arrumar isso?!&lt;/p&gt;

&lt;p&gt;Com algum tempo procurando o problema e imprimindo tudo que poderia de logs, identifiquei que a animação do avatar estava sendo iniciado com QUALQUER scroll na tela, mais especificamente falando do header.&lt;/p&gt;

&lt;p&gt;Encontrei a propriedade &lt;code class=&quot;highlighter-rouge&quot;&gt;scrollNotification.metrics.axisDirection&lt;/code&gt; que identificava se o scroll era vertical&lt;code class=&quot;highlighter-rouge&quot;&gt;(top-&amp;gt;bottom or bottom-&amp;gt;top)&lt;/code&gt; ou horizontal&lt;code class=&quot;highlighter-rouge&quot;&gt;(left-&amp;gt;right or right-&amp;gt;left)&lt;/code&gt; e com isso consegui controlar quando a animação iniciaria ou não.&lt;/p&gt;

&lt;p&gt;Solução:
&lt;img src=&quot;assets/videos/bug-fixed-scroll-tabs.gif&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;O pull request desse ajuste foi enviado para o repo original e espero que ajude outras pessoas.&lt;br /&gt;
&lt;a href=&quot;https://github.com/diegoveloper/flutter-samples/pull/11&quot; target=&quot;_blank&quot;&gt;Link para o pull request&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Obs.: essa foi a minha primeira contribuição com a comunidade open source. =D&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Informações importantes para quem quer entrar para o mundo Flutter:&lt;/p&gt;

&lt;p&gt;Temos uma mega comunidade no Brasil que fez agora no fim de agosto o evento Flutter Talks, onde conheci o git em questão, comentado acima. O Diego Velasquez mostrou as diferenças entre Provider e Bloc, além dele tiveram muitas outras talks sobre todos os assuntos possíveis de Flutter.&lt;/p&gt;

&lt;p&gt;A comunidade tem muito conteúdo de flutter. Recomendo acesso ao grupo e todo conteúdo oferecido por eles. Vale a pena!&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://t.me/flutterando&quot; target=&quot;_blank&quot;&gt;Telegram da Comunidade Flutterando&lt;/a&gt;&lt;/p&gt;</content><author><name>Leonardo Benedeti</name></author><category term="flutter" /><category term="github" /><category term="pull requests" /></entry><entry><title type="html">[Tutorial] - App Heroku: Flask com MySQL</title><link href="http://localhost:4000/heroku-python-mysql" rel="alternate" type="text/html" title="[Tutorial] - App Heroku: Flask com MySQL" /><published>2019-02-15T00:00:00-02:00</published><updated>2019-02-15T17:00:00-02:00</updated><id>http://localhost:4000/heroku-python-mysql</id><content type="html" xml:base="http://localhost:4000/heroku-python-mysql">&lt;p&gt;&lt;img src=&quot;assets/img/tutoriais/python-mysql/imagem-post.png&quot; style=&quot;margin:40px auto 10px;&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center;&quot;&gt;** Dessa vez foi no caderno da firma rsrs&lt;/p&gt;

&lt;p&gt;Em um projeto na empresa que trabalho, em uma POC para a frente Mobile, precisamos criar uma API para um projeto mobile, porém como era uma POC precisavamos fazer o teste com o menor custo possível, se possível zero.&lt;/p&gt;

&lt;p&gt;Com isso em mente, criamos tudo no Heroku e abaixo vai um pequeno passo a passo de como configurar um App no Heroku usando:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Python Flask - para consultar os dados no banco e responder ao client&lt;/li&gt;
  &lt;li&gt;MySQL ClearDB - Addon do Heroku que permite criar um DB de até 5MB(mais que suficiente para uma POC)&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;primeiro-passo-configurar-o-app-no-heroku-com-o-addon-mysql&quot;&gt;Primeiro passo: Configurar o app no Heroku com o Addon MySQL&lt;/h4&gt;

&lt;p&gt;Para conseguirmos fazer tudo o que pretendemos precisamos deixar tudo configurado e vamos fazer isso aqui.&lt;/p&gt;

&lt;p&gt;Começando pela criação do app no Heroku:
&lt;img src=&quot;assets/img/tutoriais/python-mysql/criar-app-1.png&quot; style=&quot;margin:20px auto 10px;&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;assets/img/tutoriais/python-mysql/criar-app-2.png&quot; style=&quot;margin:10px auto 40px;&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Após criar o aplicativo vamos precisar incluir os addons, no caso vamos incluir um addon para storage MySQL.
O addon escolhido foi o ClearDB pela facilidade e ter uma faixa gratuita.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;assets/img/tutoriais/python-mysql/config-addons-1.png&quot; style=&quot;margin:20px auto 10px;&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Na imagem acima é preciso clicar em configure add-ons e com isso será direcionado para uma página onde a busca da imagem abaixo será mostrada.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;assets/img/tutoriais/python-mysql/config-addons-2.png&quot; style=&quot;margin:10px auto 40px;&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Agora com o Add-on configurado precisamos nos conectar no banco para criar as tabelas e incluir dados para consumir.&lt;/p&gt;

&lt;p&gt;Para isso precisamos ir até as configurações de nosso app e abrir as variáveis de configuração.&lt;/p&gt;

&lt;p&gt;Lá vamos encontrar todos os dados para conectar com o banco.&lt;/p&gt;

&lt;p&gt;Com o seguinte formato:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mysql://[user]:[passwd]@[host]/[default_schema]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;assets/img/tutoriais/python-mysql/config-vars-mysql.png&quot; style=&quot;margin:10px auto 40px;&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;segundo-passo-criar-as-tabelas-e-incluir-dados&quot;&gt;Segundo passo: Criar as tabelas e incluir dados&lt;/h4&gt;

&lt;p&gt;Para este item eu costumo utilizar o MySQL Workbench, mas qualquer cliente, inclusive terminal pode ser utilizado.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;assets/img/tutoriais/python-mysql/mysql-wb.png&quot; style=&quot;margin:10px auto 40px;&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Após conectar, crie suas tabelas e dados, eu criei uma tabela simples para exemplificar.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;CREATE TABLE users (
  idusers INT NOT NULL,
  name VARCHAR(45) NULL,
  phone VARCHAR(45) NULL,
  PRIMARY KEY (idussers)
);
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;terceiro-passo-subir-a-app-no-heroku-com-um-hello-world&quot;&gt;Terceiro passo: Subir a app no heroku com um hello world&lt;/h4&gt;

&lt;p&gt;Um aplicação python no heroku requer alguns cuidados para subir certinho e vamos passar por todos aqui.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;requirements.txt&lt;/strong&gt;
Arquivo responsável por abrigar todos as libs que vamos importar no projeto. O próprio nome já diz certo? Requirements. =D&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Flask-MySQLdb==0.2.0
gunicorn==19.8.1
mysqlclient==1.3.12
Flask==0.12.2
Flask-Cors==3.0.3
Flask-MySQL==1.4.0
PyMySQL==0.8.1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Nesse caso temos algumas libs que vamos precisar. Básicamente todas girando no universo do Flask e MySQL&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Procfile&lt;/strong&gt;
Arquivo exclusivo do heroku para inicializar os apps. Ele pode abrigar scripts para iniciar sua aplicação.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;web: gunicorn api:app
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Nesse caso o trecho procura a app dentro do arquivo api e inicia utulizando o gunicorn&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;api.py&lt;/strong&gt;
Arquivo principal da aplicação. Aqui temos todos os códigos básicos para retornar um response.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;flask&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Flask&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;jsonify&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;flask.ext.mysql&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MySQL&lt;/span&gt; 

&lt;span class=&quot;n&quot;&gt;app&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Flask&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;__name__&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;mysql&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MySQL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# MySQL configurations  #### REVER trecho de configuração para buscar as informações
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'MYSQL_DATABASE_USER'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'USER'&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'MYSQL_DATABASE_PASSWORD'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'PASSWD'&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'MYSQL_DATABASE_DB'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'DEFAULT_SCHEMA'&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'MYSQL_DATABASE_HOST'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'HOST'&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;mysql&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;init_app&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;


&lt;span class=&quot;c1&quot;&gt;# routes
&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;route&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'/'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;methods&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;GET&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;conn&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mysql&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;connect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;cursor&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;conn&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cursor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;users&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cursor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;execute&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;SELECT * FROM users&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;users&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cursor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fetchall&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;conn&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;close&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;jsonify&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;users&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;


&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;__name__&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;__main__&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;debug&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;por-último-os-resultados-dessa-saga&quot;&gt;Por último os resultados dessa saga.&lt;/h4&gt;

&lt;p&gt;Temos duas maneiras de testar:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Localmente&lt;/strong&gt;
Com o heroku cli baixado temos um recurso para utilizar com as mesmas configurações do app, porém localmente.
Para isso basta digitar no terminal, dentro da pasta do projeto.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;heroku local web
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Este comando irá iniciar localmente um server de acordo com o seu app, normalmente na porta 5000.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;assets/img/tutoriais/python-mysql/result-local.png&quot; style=&quot;margin:10px auto 40px;&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Publicando&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Para publicar o app no heroku basta fazer um &lt;code class=&quot;highlighter-rouge&quot;&gt;git push heroku master&lt;/code&gt;. Como o heroku é baseado em git ele vai entender o commit e iniciar o build com os novos códigos.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;assets/img/tutoriais/python-mysql/commit-final.png&quot; style=&quot;margin:10px auto;&quot; alt=&quot;&quot; /&gt;
** ignorem o –force do comando, não é necessário. Tinha outra aplicação rodando nesse link e o merge não seria tão amigável rsrs&lt;/p&gt;

&lt;p&gt;Após o build acima basta clicar no link que o CLI retornou et voilá.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;assets/img/tutoriais/python-mysql/result-publicado.png&quot; style=&quot;margin:10px auto 40px;&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Caso queira baixar os códigos para criar sua API FLASK acesse o repo&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/leonardobenedeti/api-flask-with-mysql&quot; target=&quot;_blank&quot;&gt;GitHub - api-flask-with-mysql&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Leonardo Benedeti</name></author><category term="python" /><category term="mysql" /><category term="heroku" /></entry><entry><title type="html">Aplicativo Bier Prosit</title><link href="http://localhost:4000/ionic-app-bier-prosit" rel="alternate" type="text/html" title="Aplicativo Bier Prosit" /><published>2019-01-03T00:00:00-02:00</published><updated>2019-01-03T17:00:00-02:00</updated><id>http://localhost:4000/ionic-app-bier-prosit</id><content type="html" xml:base="http://localhost:4000/ionic-app-bier-prosit">&lt;p&gt;&lt;img src=&quot;assets/img/bierprosit/imagem-post.png&quot; style=&quot;margin:40px auto;&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Projeto criado em conjunto ao Bier Prosit focado em resolver alguns problemas em lojas e empórios focados em cervejas especiais. 
Principal dor: Apesar do atendimento focado na informação do produto, os clientes da loja ainda sim não questionavam tudo o que precisavam saber sobre o produto.&lt;/p&gt;

&lt;p&gt;Inicialmente o MVP foi pensado para apenas ler o código de barras da cerveja e mostrar ao usuário sua informação mais detalhada.&lt;/p&gt;

&lt;p&gt;Com essa base, o app foi ganhando novas funcionalidades como: Cardápio completo, Dicas, Cupons, Lista de desejos, Avaliações dos produtos e Foto personalizada do Bier!&lt;/p&gt;

&lt;p&gt;Para explicar melhor o projeto vamos separar em tópicos&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Arquitetura básica&lt;/li&gt;
  &lt;li&gt;Painel administrativo / API&lt;/li&gt;
  &lt;li&gt;Aplicativo&lt;/li&gt;
  &lt;li&gt;Publicação&lt;/li&gt;
  &lt;li&gt;Sustentação&lt;/li&gt;
&lt;/ol&gt;

&lt;blockquote&gt;
  &lt;p&gt;Vale ressaltar que o projeto foi idealizado e iniciado pela empresa All Most, que foi constituida por 4 amigos, Leonardo Benedeti(este que vos escreve), Mateus Diniz, Marcus Paulo e Michael Almeida. Atualmente não integro mais o time da All Most e como era o único desenvolvedor mobile, segui com o desenvolvimento sozinho, fora da All Most.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h4 id=&quot;1-arquitetura-básica&quot;&gt;1. Arquitetura básica&lt;/h4&gt;
&lt;p&gt;&lt;img src=&quot;assets/img/bierprosit/arq-bier.jpeg&quot; style=&quot;margin:40px auto 5px;&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center;&quot;&gt;** Sim, desenhei num flipchart e tirei foto =D&lt;/p&gt;

&lt;h4 id=&quot;2-painel-administrativo--api&quot;&gt;2. Painel administrativo / API&lt;/h4&gt;
&lt;p&gt;Criado utilizando &lt;code class=&quot;highlighter-rouge&quot;&gt;PHP&lt;/code&gt;, sem utilização de nenhum framework. O painel é responsável por gerenciar todos os produtos, sendo efetuando o cadastro, alteração ou exclusão de algum produto e emitir push notifications para o app, seja a cada produto cadastrado ou alguma mensagem customizada, de acordo com a vontade do Bier Prosit.&lt;/p&gt;

&lt;p&gt;Os produtos são salvos em uma base de dados &lt;code class=&quot;highlighter-rouge&quot;&gt;MySQL&lt;/code&gt; e toda conexão com ele é feita pelo painel. #phpraiz&lt;/p&gt;

&lt;p&gt;Em breve o painel será atualizado para a linguagem &lt;code class=&quot;highlighter-rouge&quot;&gt;Python&lt;/code&gt; e será &lt;code class=&quot;highlighter-rouge&quot;&gt;API Based&lt;/code&gt; utilizando &lt;code class=&quot;highlighter-rouge&quot;&gt;Flask&lt;/code&gt;, provavelmente com front-end em &lt;code class=&quot;highlighter-rouge&quot;&gt;Angular&lt;/code&gt; ou &lt;code class=&quot;highlighter-rouge&quot;&gt;React&lt;/code&gt;.&lt;/p&gt;

&lt;h4 id=&quot;3-aplicativo&quot;&gt;3. Aplicativo&lt;/h4&gt;
&lt;p&gt;A primeira versão foi criada utilizando &lt;code class=&quot;highlighter-rouge&quot;&gt;Android Nativo&lt;/code&gt; e com o lançamento do &lt;code class=&quot;highlighter-rouge&quot;&gt;Ionic 1&lt;/code&gt; migrei para o framework, com a atualização foi feito o upgrade para a versão 3 do framework.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Funcionalidades&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Consulta de produtos na API&lt;/li&gt;
  &lt;li&gt;Criação de listas de desejo&lt;/li&gt;
  &lt;li&gt;Avaliação de produtos baseado na lista de desejos&lt;/li&gt;
  &lt;li&gt;Leitura de QR Code&lt;/li&gt;
  &lt;li&gt;Captura de imagens e ao finalizar a captura, inclusão da logo do Bier na foto&lt;/li&gt;
  &lt;li&gt;Compartilhamento de fotos nas redes sociais que o usuário utilizar&lt;/li&gt;
  &lt;li&gt;Push Notification&lt;/li&gt;
  &lt;li&gt;DeepLink, ao clicar em um push de um produto específico, o usuário é direcionado para a página de detalhes do produto&lt;/li&gt;
  &lt;li&gt;Rotas até o Bier, ao clicar para exibir a rota o app sugere todos os apps que são capazes de criar uma rota. ex.: Uber, 99, Google Maps…&lt;/li&gt;
  &lt;li&gt;Novidades podem vir por ai… =D&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;4-publicação&quot;&gt;4. Publicação&lt;/h4&gt;
&lt;p&gt;Finalizado o desenvolvimento do app, o mesmo foi submetido para a AppStore e Google Play, todas as telas são diferentes por conta do framework Ionic, ele consegue diferenciar ambas plataformas e tornar a UX mais fluida possível para o usuário ter a sensação que está utilizando um app nativo.&lt;/p&gt;

&lt;p&gt;Para baixar o app ou visualizar as telas você pode acessar os links abaixo ou ler o QR Code.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://itunes.apple.com/br/app/bier-prosit/id1211795341&quot; target=&quot;_blank&quot;&gt;AppStore&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://play.google.com/store/apps/details?id=br.com.leonardobenedeti.bierprosit&quot; target=&quot;_blank&quot;&gt;GooglePlay&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;assets/img/bierprosit/qr-post.png&quot; style=&quot;margin:40px auto 5px;&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;5-sustentação&quot;&gt;5. Sustentação&lt;/h4&gt;
&lt;p&gt;Após a publicação do app, bugs e melhorias serão ajustados para manter o app funcionando normalmente.&lt;/p&gt;

&lt;p&gt;Caso tenha encontrado algum bug ou melhoria reporte e ajude o app a ficar mais completo.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://goo.gl/forms/7pgNxSLakCyOVgiy1&quot; target=&quot;_blank&quot;&gt;Melhorias e Sugestões&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://goo.gl/forms/99WNF42lMfq1UmOJ2&quot; target=&quot;_blank&quot;&gt;Bugs&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Leonardo Benedeti</name></author><category term="ionic" /><category term="php" /><category term="ios" /><category term="android" /><category term="cloud" /><category term="google play" /><category term="app store" /></entry><entry><title type="html">Apps Ionic BB e MAPFRE</title><link href="http://localhost:4000/apps-ionic-bbmapfre" rel="alternate" type="text/html" title="Apps Ionic BB e MAPFRE" /><published>2018-08-01T00:00:00-03:00</published><updated>2018-08-01T16:00:00-03:00</updated><id>http://localhost:4000/apps-ionic-bbmapfre</id><content type="html" xml:base="http://localhost:4000/apps-ionic-bbmapfre">&lt;blockquote&gt;
  &lt;p&gt;Antes de começar a falar sobre este projeto, vale a pena relembrar o período que atuei apenas na sustentação dos aplicativos que foram migrados. &lt;a href=&quot;/apps-kony-bbmapfre&quot; target=&quot;_blank&quot;&gt;Confira aqui&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Vamos separar o post em alguns tópicos para organizar:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Estudos sobre melhores tecnologias mobile&lt;/li&gt;
  &lt;li&gt;PoC com a tecnologia escolhida&lt;/li&gt;
  &lt;li&gt;Definição do projeto/estimativa&lt;/li&gt;
  &lt;li&gt;Início do projeto&lt;/li&gt;
  &lt;li&gt;Desenvolvimento&lt;/li&gt;
  &lt;li&gt;Entrega&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Vamos lá…&lt;/p&gt;

&lt;h3 id=&quot;1-estudos-sobre-melhores-tecnologias-mobile&quot;&gt;1. Estudos sobre melhores tecnologias mobile&lt;/h3&gt;

&lt;p&gt;Ainda durante a sustentação, atuando pela Entelgy, fizemos um estudo sobre as tecnologias mobile que estavam em alta no momento.
Esse estudo veio acompanhado com uma estimativa comparando entre: Kony(atual), Ionic, React Native e Nativas.
Comparamos os seguintes pontos: Curva de aprendizado, velocidade de desenvolvimento, performance e custo.&lt;/p&gt;

&lt;p&gt;Com esses pontos na mesa, após alguns dias de papo entre todos que prestavam serviço, chegamos a conclusão que Ionic seria a melhor opção dado o cenário atual do Grupo Segurador.&lt;/p&gt;

&lt;p&gt;Corta a cena vamos para o próximo item.&lt;/p&gt;

&lt;h3 id=&quot;2-poc-com-a-tecnologia-escolhida&quot;&gt;2. PoC com a tecnologia escolhida&lt;/h3&gt;

&lt;p&gt;Voltando dos comerciais, já atuando pela everis, ainda na sustentação dos apps, surgiu o assunto que migraríamos os apps para o Ionic.
Com isso a equipe de sustentação, mesmo sem nada confirmado, decidiu usar o tempo livre para replicar a home do app principal dos apps em ionic para mensurar o tempo que precisariam para a migração.&lt;/p&gt;

&lt;p&gt;Com isso fizemos em duas maneiras.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Layout exatamente igual ao app atual também com ionic&lt;/li&gt;
  &lt;li&gt;Layout aos moldes do ionic com poucos ajustes&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Com isso vamos aos prints&lt;/p&gt;

&lt;h4 id=&quot;original---prints-do-app-em-produção&quot;&gt;Original - Prints do app em produção&lt;/h4&gt;
&lt;p&gt;&lt;img src=&quot;assets/img/everis/bbmapfre-unificacao/0-app-kony.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;ionic-idêntico---muitos-ajustes-para-o-layout-ficar-idêntico-ao-app-de-produção&quot;&gt;Ionic Idêntico - Muitos ajustes para o layout ficar idêntico ao app de produção&lt;/h4&gt;
&lt;div class=&quot;grid&quot;&gt;
    &lt;div class=&quot;a img&quot;&gt;
        &lt;img src=&quot;assets/img/everis/bbmapfre-unificacao/1.0-home-identico-ionic.png&quot; alt=&quot;&quot; /&gt;
    &lt;/div&gt;
    &lt;div class=&quot;b img&quot;&gt;
        &lt;img src=&quot;assets/img/everis/bbmapfre-unificacao/1.1-menu-identico-ionic.png&quot; alt=&quot;&quot; /&gt;
    &lt;/div&gt;
&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;Porque criamos este exatamente igual: No início do projeto foi dito que seria apenas uma troca de tecnologia sem alterar nada de regra de negócio nem layout. Dai fizemos exatamente igual para respeitar essa decisão.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h4 id=&quot;ionic-way---layout-básico-sem-muitos-ajustes&quot;&gt;Ionic Way - Layout básico sem muitos ajustes&lt;/h4&gt;
&lt;div class=&quot;grid&quot;&gt;
    &lt;div class=&quot;a img&quot;&gt;
        &lt;img src=&quot;assets/img/everis/bbmapfre-unificacao/2.0-home-ajustes-pequenos-ionic.png&quot; alt=&quot;&quot; /&gt;
    &lt;/div&gt;
    &lt;div class=&quot;b img&quot;&gt;
        &lt;img src=&quot;assets/img/everis/bbmapfre-unificacao/2.1-menu-ajustes-pequenos-ionic.png&quot; alt=&quot;&quot; /&gt;
    &lt;/div&gt;
&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;Mas como todo consultor deve se comportar, fizemos uma versão mais simples, usando tudo que o Ionic podia oferecer e mostramos as vantagens.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;A PoC foi apresentada para os gerentes e foi muito elogiada. Mas infelizmente não foi utilizada porque o projeto teve uma surpresa, que vou citar abaixo. rsrs&lt;/p&gt;

&lt;h3 id=&quot;3-definição-do-projetoestimativa&quot;&gt;3. Definição do projeto/estimativa&lt;/h3&gt;

&lt;p&gt;Com o cenário posto, com PoC e noção de tempo para migrar, estimamos em 3 meses o projeto para 4 pessoas. Maravilha.&lt;/p&gt;

&lt;p&gt;Porém como nada pode estar tão perfeito, veio a surpresa que comentei acima. O app mudaria o escopo, como?&lt;/p&gt;

&lt;h4 id=&quot;de&quot;&gt;De:&lt;/h4&gt;
&lt;p&gt;4 apps Kony:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;MAPFRE Seguros ( institucional )&lt;/li&gt;
  &lt;li&gt;BB Seguros ( institucional )&lt;/li&gt;
  &lt;li&gt;MAPFRE Auto ( auto )&lt;/li&gt;
  &lt;li&gt;BB Seguro Auto ( auto )&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Sim, existia um app apenas para o conteúdo institucional da empresa e outro para as ações transacionais referentes ao segmento auto.
E o projeto inicial seria manter esse escopo, porém com a tecnologia Ionic.&lt;/p&gt;

&lt;h4 id=&quot;para&quot;&gt;Para:&lt;/h4&gt;
&lt;p&gt;2 apps Ionic:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;MAPFRE Seguros&lt;/li&gt;
  &lt;li&gt;BB Seguros&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Mantivemos o nome do app institucional por ser mais abrangente e unificamos o conteúdo dos apps para facilitar a vida do usuário.
e agora com a unificação não fazia mais sentido manter a mesma UX do app, com isso foi preciso um trabalho massivo da equipe de UI/UX da everis para conseguir criar um app com todo conteúdo e ainda sim fazer sentido.&lt;/p&gt;

&lt;h4 id=&quot;novo-layout&quot;&gt;Novo layout&lt;/h4&gt;
&lt;p&gt;Prints de produção, não achei as especificações rsrs
&lt;img src=&quot;assets/img/everis/bbmapfre-unificacao/novo-layout.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;4-início-do-projeto&quot;&gt;4. Início do projeto&lt;/h3&gt;

&lt;p&gt;Com novo layout definido para algumas telas e time se formando. Fomos criando o app e agora como a estimativa já havia sido definida, precisávamos replanejar ou assumir que caberia nos 3 meses que já havíamos passado para o cliente.&lt;/p&gt;

&lt;p&gt;Aceitamos o desafio e topamos manter os 3 meses, visto que o novo layout melhoraria a usabilidade e com isso removeria algumas telas desnecessárias.&lt;/p&gt;

&lt;h3 id=&quot;5-desenvolvimento&quot;&gt;5. Desenvolvimento&lt;/h3&gt;

&lt;p&gt;Apesar de a estimativa ter sido feita como escopo fechado, controlamos o desenvolvimento com métodos ágeis e tivemos poucos problemas em relação a isso.&lt;/p&gt;

&lt;p&gt;O desenvolvimento teve poucos problemas na parte do ionic. Não acho tão relevante falar das outras frentes que tiveram. rsrs&lt;/p&gt;

&lt;p&gt;Pontos interessantes que podemos citar sobre o desenvolvimento são:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Criamos cerca de 95+ telas, algumas sendo reutilizadas como componentes;&lt;/li&gt;
  &lt;li&gt;Criamos um fluxo de telas para o usuário voltar onde parou, mesmo após a morte do app, depois de um tempo em segundo plano;&lt;/li&gt;
  &lt;li&gt;Criamos um plugin específico para o projeto que não existia na doc do ionic. Plugin para enviar o ticket carteirinha para a Apple Wallet &lt;a href=&quot;https://github.com/everis-br/cordova-apple-wallet-tickets&quot; target=&quot;_blank&quot;&gt;Repo&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Usamos o plugin do maps para mostrar o guincho solicitado chegando em tempo real&lt;/li&gt;
  &lt;li&gt;e muito mais …&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Também utilizamos uma boa prática em apps componentizáveis para melhoria de performance chamada &lt;code class=&quot;highlighter-rouge&quot;&gt;Lazy Loading&lt;/code&gt;. Em um app com quase 100 telas faz uma diferença e tanto. Pensa, se a splash do app precisasse esperar carregar as 100 telas, demoraria muito. 
Com esse recurso, carregamos apenas a home e o que mais o usuário for clicando para utilizar.&lt;/p&gt;

&lt;p&gt;Por último, mas não menos importante, criamos, duas vezes, todo pipeline de build utilizando a primeira vez, Jenkins e após o cliente adotar, utilizamos o Azure DevOps. 
O pipeline não fazia todo papel DevOps de fato por políticas do cliente, mas conseguimos otimizar boa parte do desenvolvimento/homologação.&lt;/p&gt;

&lt;p&gt;A cada commit feito nas branchs escolhidas como trigger, tanto jenkins quanto azure, faziam o build e entregavam o &lt;code class=&quot;highlighter-rouge&quot;&gt;apk&lt;/code&gt; e &lt;code class=&quot;highlighter-rouge&quot;&gt;ipa&lt;/code&gt; em uma enterprise store chamada &lt;a href=&quot;https://appinstaller.com.br&quot; target=&quot;_blank&quot;&gt;AppInstaller&lt;/a&gt;. Com isso passávamos o link para a equipe de homologação do cliente.&lt;/p&gt;

&lt;p&gt;Infelizmente o processo de publicação ainda continua manual pelas políticas já mencionadas.&lt;/p&gt;

&lt;h3 id=&quot;6-entrega&quot;&gt;6. Entrega&lt;/h3&gt;

&lt;p&gt;O prazo para entrega do projeto, código desenvolvido, era para dia 02/02. Fizemos algumas correrias para atingir essa data e conseguimos entregar perto disso. Atrasado? Não. Entregamos dia 01/02 com uma ressalva, não entregamos apenas o código desenvolvido, mas sim o app PUBLICADO nas lojas. =D&lt;/p&gt;

&lt;h3 id=&quot;resumo&quot;&gt;Resumo&lt;/h3&gt;

&lt;p&gt;Hoje o app continua nas lojas e a sustentação do app está bem estabilizada, sem incidentes graves e problemas que demandem muita energia. =D&lt;/p&gt;</content><author><name>Leonardo Benedeti</name></author><category term="ionic" /><category term="ios" /><category term="android" /><category term="google play" /><category term="app store" /><category term="devops" /><category term="jenkins" /><category term="azure devops" /></entry><entry><title type="html">[POC] - SmartApp</title><link href="http://localhost:4000/poc-smart-app" rel="alternate" type="text/html" title="[POC] - SmartApp" /><published>2018-06-08T00:00:00-03:00</published><updated>2018-06-08T16:00:00-03:00</updated><id>http://localhost:4000/poc-smart-app</id><content type="html" xml:base="http://localhost:4000/poc-smart-app">&lt;p&gt;&lt;img src=&quot;assets/img/everis/smartapp/img-post.png&quot; style=&quot;margin:40px auto 10px;&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center;&quot;&gt;** Acredite, no canto direito superior é um cerebro pra simbolizar a inteligencia da api&lt;/p&gt;

&lt;p&gt;Este projeto foi criado utilizando uma arquitetura básica de um app feito em Ionic consumindo uma API python utilizando Flask e um algoritmo de recomendações baseado em inteligencia artificial.&lt;/p&gt;

&lt;p&gt;Vamos separar em tópicos para explicar a POC.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Conceito de smart apps&lt;/li&gt;
  &lt;li&gt;Necessidade e contexto&lt;/li&gt;
  &lt;li&gt;App final&lt;/li&gt;
&lt;/ol&gt;

&lt;h4 id=&quot;1-conceito-de-smart-apps&quot;&gt;1. Conceito de smart apps&lt;/h4&gt;
&lt;p&gt;Para explicar o conceito de smart apps a melhor maneira é exemplificar alguns casos.
Um smart app bem conhecido e muito utilizado é o Waze.
O app altera o fundo do app quando atinge o horário 17:59, antes deste horário é cinza com rotas em roxo, quando o dia vira noite, o app faz um cross-fading de cor de fundo para um cinza bem escuro e com rotas em azul claro para contrastar com o fundo.&lt;/p&gt;

&lt;div class=&quot;images-grid two&quot;&gt;
  &lt;img src=&quot;assets/img/everis/smartapp/waze-dia.png&quot; alt=&quot;&quot; /&gt;
  &lt;img src=&quot;assets/img/everis/smartapp/waze-noite.png&quot; alt=&quot;&quot; /&gt;
&lt;/div&gt;

&lt;p&gt;Com isso podemos classificar smart apps, os apps que conseguem de alguma forma interagir com o ambiente do usuário. Seja com horário, como o Waze faz, com localização recomendando de lugares e outros exemplos.&lt;/p&gt;

&lt;p&gt;Existem tipos de smart app, a grande maioria utiliza recursos do device que esta instalado, mas existem apps que são baseados em API. Que é o caso do post.&lt;/p&gt;

&lt;h4 id=&quot;2-necessidade-e-contexto&quot;&gt;2. Necessidade e contexto&lt;/h4&gt;

&lt;p&gt;A POC foi pensada para ser apresentada em um evento onde a Everis tem boa participação e sempre aborda as novas tendências de mercado em varias frentes.&lt;/p&gt;

&lt;p&gt;Neste caso estavamos a pouco tempo do evento e existia um app nativo iOS que ainda não consumia nenhuma api e tinha alguns exemplos de cards, mas tudo offline e sem nenhuma recomendação.&lt;/p&gt;

&lt;p&gt;Para conseguir criar tudo que precisava, chegamos a um consenso que Ionic seria a melhor pedida devido sua facilidade e menor barreira de entrada.&lt;/p&gt;

&lt;p&gt;Também existia um algoritmo feito em Python que ao inputar dados, ele recomenda algumas informações baseadas no treino previamente feito.&lt;/p&gt;

&lt;p&gt;Com o algoritmo em mãos precisavamos criar uma API na mesma linguagem para não gerar retrabalho no algoritmo, com isso escolhemos o Flask para expor em uma API e disponibilizamos no Heroku.&lt;/p&gt;

&lt;p&gt;Escrevi um outro &lt;a href=&quot;/heroku-python-mysql&quot; target=&quot;_blank&quot;&gt;post&lt;/a&gt; que mostra como subir uma aplicação python com mysql no heroku.&lt;/p&gt;

&lt;h4 id=&quot;3-app-final&quot;&gt;3. App final&lt;/h4&gt;

&lt;p&gt;Após criar o app e a api, conectamos os dois e ao enviar os dados preenchidos no formulário a API baseada no treino feito posteriormente, recomenda as informações que o app mostra em formato de cards.&lt;/p&gt;

&lt;div class=&quot;images-grid three&quot;&gt;
  &lt;img class=&quot;a&quot; src=&quot;assets/img/everis/smartapp/smartapp-1.png&quot; alt=&quot;&quot; /&gt;
  &lt;img class=&quot;b&quot; src=&quot;assets/img/everis/smartapp/smartapp-2.png&quot; alt=&quot;&quot; /&gt;
  &lt;img class=&quot;c&quot; src=&quot;assets/img/everis/smartapp/smartapp-3.png&quot; alt=&quot;&quot; /&gt;
&lt;/div&gt;</content><author><name>Leonardo Benedeti</name></author><category term="ionic" /><category term="python" /><category term="ios" /><category term="android" /><category term="heroku" /></entry><entry><title type="html">RioSulValley / Página de Eventos</title><link href="http://localhost:4000/events-page-from-riosulvalley" rel="alternate" type="text/html" title="RioSulValley / Página de Eventos" /><published>2018-04-17T00:00:00-03:00</published><updated>2018-04-17T14:32:16-03:00</updated><id>http://localhost:4000/events-page-from-riosulvalley</id><content type="html" xml:base="http://localhost:4000/events-page-from-riosulvalley">&lt;p&gt;&lt;img src=&quot;assets/img/rsv/eventos.png&quot; style=&quot;margin:40px auto;&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Depois de um longo papo sobre fazer ou não uma pagina de eventos e como fazer isso pela comunidade &lt;a href=&quot;http://riosulvalley.com.br&quot;&gt;RioSulValley&lt;/a&gt;, me propus a ajudar a criar essa tal página. 
Criamos um grupo onde apenas os interessados em ajudar estavam presentes, eram estes: &lt;a href=&quot;&quot;&gt;Kaio Freitas&lt;/a&gt; - o cara que normalmente toma a frente da comunidade em diversos assuntos; &lt;a href=&quot;&quot;&gt;Ivo Soares&lt;/a&gt; - desenvolvedor atuante na comunidade, e quem mostrou a ideia que usamos para criar a página; Eu - desenvolvedor atuante na comunidade sempre que posso rsrs.&lt;/p&gt;

&lt;p&gt;Com o grupo formado iniciamos o bate papo para criar essa tal página. Com uma ideia, Ivo mostrou uma página que fazia o mesmo que queriamos fazer para o RSV, era a &lt;a href=&quot;http://frontendbr.com.br/eventos/&quot;&gt;página eventos&lt;/a&gt; da comunidade &lt;a href=&quot;http://frontendbr.com.br&quot;&gt;Front-End Brasil&lt;/a&gt;, como é uma comunidade também, o código estava aberto no &lt;a href=&quot;https://github.com/frontendbr/eventos&quot;&gt;github&lt;/a&gt; deles. Sendo assim, carinhosamente fizemos um fork do projeto e iniciamos as alterações.&lt;/p&gt;

&lt;p&gt;No início atuei alterando o front para as cores e conteúdos do RSV, ao finalizar essa parte que em teoria seria a mais simples rsrs, fomos para a parte funcional da página. O Front-End Brasil, pelo próprio nome já se explica é uma comunidade em nível nacional e o RSV é regional, abrangendo todo Sul Fluminense do Rio de Janeiro, com isso precisamos alterar um dos filtros que listava os eventos por ESTADOS. Alteramos este filtro para CIDADES e assim todas as alterações que tinhamos em mente estavam prontas.&lt;/p&gt;

&lt;p&gt;Com o front alterado, o Ivo iniciou sua atuação, preparando tudo que foi desenvolvido para fazendo o build final da aplicação para publicar no github pages do RSV gerando o link &lt;a href=&quot;http://riosulvalley.com.br/eventos&quot;&gt;riosulvalley.com.br/eventos&lt;/a&gt;.&lt;/p&gt;</content><author><name>Leonardo Benedeti</name></author><category term="react" /><category term="webpack" /><category term="css" /><category term="github pages" /></entry></feed>