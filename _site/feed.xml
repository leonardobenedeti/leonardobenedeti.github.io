<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.2.0">Jekyll</generator><link href="/feed.xml" rel="self" type="application/atom+xml" /><link href="/" rel="alternate" type="text/html" /><updated>2024-09-17T10:38:41-03:00</updated><id>/feed.xml</id><title type="html">Leonardo Benedeti</title><subtitle>Meu portfólio e base de conhecimento</subtitle><author><name>Leonardo Benedeti</name></author><entry><title type="html">Github Actions - Flutter Web</title><link href="/Github-Actions" rel="alternate" type="text/html" title="Github Actions - Flutter Web" /><published>2023-12-24T00:00:00-03:00</published><updated>2023-12-24T16:00:00-03:00</updated><id>/Github-Actions</id><content type="html" xml:base="/Github-Actions">&lt;h3 id=&quot;como-publicar-flutter-web-utilizando-github-actions--webhook--hostinger&quot;&gt;Como publicar flutter web utilizando Github Actions + webhook + hostinger&lt;/h3&gt;

&lt;p&gt;Recentemente atuei com o Github Actions em um projeto mas não tive oportunidade de criar um do zero pra ver como funcionava, dai veio a ideia de criar algo simples e que pudesse postar por aqui, dai como o repositório do GearApp é privado não poderia servir de case pra mostrar publicamente, dai lembrei de um projeto que estava meio jogado e caberia um testes como esse.&lt;/p&gt;

&lt;p&gt;A ideia era:&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;Criar o layout mais básico possível com flutter&lt;/li&gt;
  &lt;li&gt;Sincronizar os hooks pra assim que publicar em uma branch já publicar no hostinger&lt;/li&gt;
  &lt;li&gt;Automatizar tudo isso com o Github actions&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;O resumo da ideia em um rabisco seria algo nesse sentido.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;./assets/img/github-actions/code-flow.jpeg&quot; alt=&quot;Desenho do fluxo de código&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;layout&quot;&gt;Layout&lt;/h3&gt;

&lt;p&gt;O App installer é um projeto que acabou morrendo e decidi manter o domínio por ser um nome bem bom, mas também disponibilizar a possibilidade para negociação do domínio e não apenas mostrar que o site não existe. Inicialmente fiz com um construtor da própria hostinger e tava ok, mas pra exemplificar o uso do Github Actions vi um bom candidato pra isso.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;./assets/img/github-actions/layout.png&quot; alt=&quot;Layout do site&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Além do layout adicionei também o copiar para área de transferência.&lt;/p&gt;

&lt;p&gt;No final vou disponibilizar o link do repo completo.&lt;/p&gt;

&lt;h3 id=&quot;githooks-no-hostinger&quot;&gt;Githooks no hostinger&lt;/h3&gt;

&lt;p&gt;Aqui não existe muito mistério, mas pra não deixar de mostrar, vamos aos prints&lt;/p&gt;

&lt;p&gt;No painel de hospedagem da hostinger você pode cadastrar um repo e apontar para um diretório, assim que o repo for atualizado, você pode implantar e com isso ele pega tudo que tem na branch e adiciona no diretório indicado, mas nesse passo, ainda manualmente.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;./assets/img/github-actions/repo-to-directory.png&quot; alt=&quot;Implantação manual dos arquivos do repo&quot; /&gt;&lt;/p&gt;

&lt;p&gt;E pra facilitar mais ainda, ao clicar em implantação automática, é mostrado um link do hook que o hostinger irá escutar caso esteja vinculado ao github. Feito isso, todo push na branch production é feito todo o processo de substituir os arquivos do diretório pelos arquivos da branch, assim, atualizando o site ou projeto.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;./assets/img/github-actions/implantacao-automatica.png&quot; alt=&quot;Implantação automática&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;estrela-do-show&quot;&gt;Estrela do show&lt;/h3&gt;

&lt;p&gt;Agora, com tudo já montado, faltou apenas o próprio build utilizando os workflows do github actions e o meu ficou assim:&lt;/p&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Publish Web&lt;/span&gt;

&lt;span class=&quot;na&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;workflow_dispatch&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;branches&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;main&lt;/span&gt;

&lt;span class=&quot;na&quot;&gt;jobs&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;build&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;runs-on&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;ubuntu-latest&lt;/span&gt;

    &lt;span class=&quot;na&quot;&gt;steps&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Checkout&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;uses&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;actions/checkout@v1&lt;/span&gt;

      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Setup Flutter&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;uses&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;subosito/flutter-action@v1&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;with&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;channel&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;stable&quot;&lt;/span&gt;

      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Install dependencies&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;flutter pub get&lt;/span&gt;

      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Build Web&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;flutter build web --release&lt;/span&gt;

      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Deploy&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;|&lt;/span&gt;
          &lt;span class=&quot;s&quot;&gt;cd build/web&lt;/span&gt;
          &lt;span class=&quot;s&quot;&gt;git init&lt;/span&gt;
          &lt;span class=&quot;s&quot;&gt;git config --global user.email leonardobenedeti@gmail.com&lt;/span&gt;
          &lt;span class=&quot;s&quot;&gt;git config --global user.name leonardobenedeti&lt;/span&gt;
          &lt;span class=&quot;s&quot;&gt;git status&lt;/span&gt;
          &lt;span class=&quot;s&quot;&gt;git remote add origin https://$@github.com/leonardobenedeti/appinstaller.git&lt;/span&gt;
          &lt;span class=&quot;s&quot;&gt;git checkout -b production&lt;/span&gt;
          &lt;span class=&quot;s&quot;&gt;git add --all&lt;/span&gt;
          &lt;span class=&quot;s&quot;&gt;git commit -m &quot;Publish by Actions&quot;&lt;/span&gt;
          &lt;span class=&quot;s&quot;&gt;git push origin production -f&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Mas aqui temos mais detalhes pra funcionar como o &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;secrets.TOKEN_FOR_BUILD&lt;/code&gt;. Pela internet tem vários artigos que mostram como criar o token pra utilizar aqui só que gostaria de indicar e também deixar o crédito de onde tirei essa dúvida que foi neste &lt;a href=&quot;https://blog.flutterando.com.br/publicando-suas-paginas-flutter-no-github-pages-utilizando-github-action-ab2701cd1f52&quot; target=&quot;_blank&quot;&gt;post&lt;/a&gt; do Toshi Ossada no blog do Flutterando.&lt;/p&gt;

&lt;p&gt;E com isso tudo pronto, só fazer seus commits que tudo vai acontecer automágicamente… =D&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;./assets/img/github-actions/workflows.png&quot; alt=&quot;Implantação automática&quot; /&gt;&lt;/p&gt;

&lt;p&gt;e claro, quando for utilizar algo mais automatiado assim, cuidado com o fluxo pra não sobrepor códigos que não poderiam ser alterados.&lt;/p&gt;

&lt;p&gt;Pra conferir o site rodando basta entrar no site &lt;a href=&quot;https://appinstaller.com.br&quot; target=&quot;_blank&quot;&gt;AppInstaller&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;E como prometido, aqui vai o &lt;a href=&quot;https://github.com/leonardobenedeti/appinstaller&quot; target=&quot;_blank&quot;&gt;Repo do AppInstaller&lt;/a&gt; pra vocês conferirem as execuções e tudo além que não foi explicado aqui.&lt;/p&gt;</content><author><name>Leonardo Benedeti</name></author><category term="Flutter" /><category term="Web" /><category term="CI/CD" /><category term="Github Actions" /></entry><entry><title type="html">IBGE - Places</title><link href="/IBGE-Places" rel="alternate" type="text/html" title="IBGE - Places" /><published>2023-12-20T00:00:00-03:00</published><updated>2023-12-20T16:00:00-03:00</updated><id>/IBGE-Places</id><content type="html" xml:base="/IBGE-Places">&lt;h3 id=&quot;relembrar-é-viver-edição-ionic-framework&quot;&gt;Relembrar é viver… edição Ionic Framework&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;./assets/img/ibge/video-device-browser.gif&quot; alt=&quot;Resumo da usabilidade do app em GIF&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;porque-reviver-uma-tech-que-não-atuo-mais-&quot;&gt;Porque reviver uma tech que não atuo mais ?&lt;/h3&gt;

&lt;p&gt;Por conta de uma possível oportunidade, que precisava estabilizar um app criado em Ionic, fui abordado por um amigo/ex-colega de trabalho sobre a possibilidade de ajudar no projeto.&lt;/p&gt;

&lt;p&gt;Porém… mesmo topando ajudar inicialmente, surgiu uma incerteza de que de fato eu daria conta do trabalho, afinal, faz muito tempo que não atuo com Ionic.&lt;/p&gt;

&lt;p&gt;Daí decidi criar esse projeto pra ir relembrando a documentação, navegação e chamadas de APIs abertas.&lt;/p&gt;

&lt;h3 id=&quot;porque-estados-e-cidades-do-brasil&quot;&gt;Porque estados e cidades do brasil?&lt;/h3&gt;

&lt;p&gt;Queria criar algo usando uma api aberta como os testes padrões que normalmente utilizam as APIs de heróis da marvel e muitas outras apis abertas, porém não queria ser contaminado com testes já existentes e nessa brincadeira encontrei a api do IBGE que tem muitas outras opções muito legais pra serem exploradas.&lt;/p&gt;

&lt;p&gt;No caso deste app, optei por utilizar estas opções:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;https://servicodados.ibge.gov.br/api/v1/localidades&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Lista as localidades do brasil em vários formatos, aqui no app usamos apenas estados e cidades pra montar a lista e capturar o id da cidade pra utilizar nas próximas.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;https://servicodados.ibge.gov.br/api/v2/censos/nomes/leonardo?localidade=[ID_CIDADE]&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Fornece a quantidade de Leonardos nascidos em um determinado período na localidade, que no caso utilizei o id da cidade pra buscar o número por cidade.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;https://servicodados.ibge.gov.br/api/v3/malhas/municipios/[ID_CIDADE] &lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Também com o id da cidade, neste caso aqui é possível buscar a silhueta da cidade.&lt;/p&gt;

&lt;p&gt;e com toda essa informação vamos pro layout…&lt;/p&gt;

&lt;h3 id=&quot;layout-da-ideia&quot;&gt;Layout da ideia&lt;/h3&gt;

&lt;p&gt;Como era algo apenas pra relembrar a mecânica do Ionic e não um projeto de fato, não tinha muita intenção de criar algo muito complexo em layout, muito também por conta de que o layout no Ionic é feito com html e css, duas tecnologias que já tenho uma ótima experiência.&lt;/p&gt;

&lt;p&gt;Daí pra relembrar apenas a mecânica, um layout simples bastaria e pensei justamente em duas listas simples com ChoiceChips e depois uma tela com mais detalhes da cidade escolhida.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;Listagens de estados e cidades
&lt;img src=&quot;./assets/img/ibge/listagens.png&quot; alt=&quot;Imagem das listas&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Detalhes da cidade e quantos Leonardos
&lt;img src=&quot;./assets/img/ibge/detalhes.png&quot; alt=&quot;Imagem das listas&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Vale comentar, em um projeto mais elaborado, normalmente faço um protótipo antes, aqui eu fui me guiando apenas pelo código.&lt;/p&gt;

&lt;h3 id=&quot;sobre-o-projeto-e-código&quot;&gt;Sobre o projeto e código&lt;/h3&gt;

&lt;p&gt;Confesso que quando a oportunidade chegou eu não aceitei tão bem a ideia de retornar a uma tecnologia que não utilizo há algum tempo… mas sinceramente a realidade é que não achei tão ruim, de fato me encontrei muito mais rápido do que imaginava e o resultado foi bem interessante, principalmente pelo tempo, demorei cerca de 3~4h pra realizar a base do projeto e antes de escrever este post, fiz uns ajustes de layout apenas e tudo pode ser conferido nos timestamps dos commits. =D&lt;/p&gt;

&lt;p&gt;Sobre o código, vocês podem conferir tudo como foi feito no repo do projeto que está aberto.&lt;/p&gt;

&lt;p&gt;Repo do projeto: 
&lt;a href=&quot;https://github.com/leonardobenedeti/ibge-places&quot; target=&quot;_blank&quot;&gt;https://github.com/leonardobenedeti/ibge-places&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;obs.: tenho outro projeto parecido com este, feito também para uma oportunidade porém bem mais elaborado e feito em Flutter que é o 
&lt;a href=&quot;https://leonardobenedeti.github.io/pruuu-app&quot; target=&quot;_blank&quot;&gt;Pruuu App&lt;/a&gt; criado pra ser uma réplica do twitter, ficou bem daora e vale a leitura. =D&lt;/p&gt;</content><author><name>Leonardo Benedeti</name></author><category term="Ionic" /><category term="scss" /><category term="typescript" /></entry><entry><title type="html">Costa Coffee</title><link href="/costa-coffee" rel="alternate" type="text/html" title="Costa Coffee" /><published>2023-10-26T00:00:00-03:00</published><updated>2023-10-26T16:00:00-03:00</updated><id>/costa-coffee</id><content type="html" xml:base="/costa-coffee">&lt;h3 id=&quot;contexto-geral-e-história&quot;&gt;Contexto geral e história&lt;/h3&gt;

&lt;p&gt;Aplicação web usada como interface de uma máquina de café da marca Costa Coffee, marca internacional comprada recentemente pela CocaCola na época e com a CI&amp;amp;T tento uma boa posição dentro do projeto cuidando de várias frentes.&lt;/p&gt;

&lt;p&gt;O projeto consistia basicamente em criar aplicações que beberiam da mesma fonte de dados, exibindo em 4 formatos:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Pedidos: Tela que mostrava todos os itens disponíveis para realizar o pedido, no caso deste formato, pouco depois da minha chegada também passamos a adaptar o código para rodar em browsers para os usuários pedirem dos seus próprios devices e não apenas do totem de pedidos.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Acompanhamento: Uma tela sem interação do usuário. Básicamente uma tela de status mostrando a fila de pedidos e o status de cada um deles.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Retirada: Uma tela bem específica, tanto em dimensões quanto em design por conta do tamanho, tinha o foco de receber a intenção de retirada do pedido do usuário e validar as informações para emitir a ação pra máquina.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;tecniquês&quot;&gt;Tecniquês&lt;/h3&gt;

&lt;p&gt;O projeto foi criado utilizando uma base mais focada em apps mobile por ter uma navegação bem restrita e totalmente controlada pelo próprio app, não dependendo assim de interações externas ao app como um voltar do browser por exemplo ou botão voltar do android. Tudo era controlado 100% pelos botões desenvolvidos pelo time.&lt;/p&gt;

&lt;p&gt;Utilizavamos uma arquitetura muito específica do projeto e estavamos caminhando pra implementar algo como o Clean mas ainda não estava nesse ponto quando deixei o projeto.&lt;/p&gt;

&lt;p&gt;Para a gestão de estado da aplicação utilizavamos Bloc e também próximo a minha saída do projeto estavamos começando a migrar para Cubit.
Injeção e inversão de dependência, utilizando GetIt para injeção.&lt;/p&gt;

&lt;h3 id=&quot;fim-da-história&quot;&gt;Fim da história&lt;/h3&gt;

&lt;p&gt;Este foi meu último projeto na CI&amp;amp;T, onde decidi abrir asas e experimentar um mundo mais arriscado lançando um app independente chamado GearApp que é focado no setor automotivo, mas aqui a história é do Costa e não do Gear… com essa decisão acabei deixando a CI&amp;amp;T em junho de 2023, uma das melhores consultorias que já passei.&lt;/p&gt;

&lt;p&gt;Obrigado CI&amp;amp;T. Tamo junto&lt;/p&gt;</content><author><name>Leonardo Benedeti</name></author><category term="flutter" /><category term="web" /></entry><entry><title type="html">Site StageFilms</title><link href="/stage-films" rel="alternate" type="text/html" title="Site StageFilms" /><published>2023-10-26T00:00:00-03:00</published><updated>2023-10-12T16:00:00-03:00</updated><id>/stage-films</id><content type="html" xml:base="/stage-films">&lt;h3 id=&quot;inicio-da-ideia-e-proposta&quot;&gt;Inicio da ideia e proposta&lt;/h3&gt;

&lt;p&gt;Por ser seguidor do canal onde o Pedro Spina atuava anteriormente à fundação da StageFilms, sempre acompanhei o trabalho dele e na primeira oportunidade de criar um site pra empresa dele, pulei na bomba e ofereci meus trabalhos então pra Stage, composta pelo Pedro Spina e sua esposa Luana Spina.&lt;/p&gt;

&lt;p&gt;Após todo papo pra entender o que eles queriam e pegar exemplos, iniciei uma analise que acabou sendo bem controversa, julguei ser possível fazer 100% do que eles pedira, mas ao iniciar o código, tudo conflitou e acabou ficando muito bagunçado e não funcionou.&lt;/p&gt;

&lt;p&gt;Com isso, fizemos uma nova reunião e fomos por um caminho de criar algo mais simples mas que ainda sim evidenciasse o trabalho da Stage Films e acabamos criando algo muito daora.&lt;/p&gt;

&lt;h3 id=&quot;desenvolvimento&quot;&gt;Desenvolvimento&lt;/h3&gt;

&lt;p&gt;Inicialmente utilizariamos uma serie de libs para o site todo ser animado, mas com os conflitos citados anteiormente, acabei optando por seguir uma linha mais “raiz” e criar muita coisa na mão.&lt;/p&gt;

&lt;p&gt;Caso não queira ler todo processo mas esteja curioso com o site, basta abrir o link: &lt;a href=&quot;https://stagefilms.com.br&quot; target=&quot;_blank&quot;&gt;stagefilms.com.br&lt;/a&gt;&lt;/p&gt;

&lt;h4 id=&quot;section-header--logo-animada&quot;&gt;Section: Header / Logo animada&lt;/h4&gt;

&lt;p&gt;Um dos itens principais pedidos por eles era uma logo que tinha uma animação bem específica, onde todas as letras da logo iriam mudando o tamanho e posicionamento, meio que desconstruindo a logo.&lt;/p&gt;

&lt;p&gt;Nesse caso, isolei cada letra da logo e apliquei uma regra de scale e padding específica para gerar o efeito de desconstrução. Inicialmente queriamos algo disforme, mas acabou que a padronização de algumas reduzindo e outras aumentando agradou e seguimos assim.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;./assets/img/stagefilms/logo-pre-scroll.png&quot; alt=&quot;Imagem da section head pré scroll&quot; /&gt;
&lt;img src=&quot;./assets/img/stagefilms/logo-pos-scroll.png&quot; alt=&quot;Imagem da section head pós scroll&quot; /&gt;&lt;/p&gt;

&lt;p&gt;No asset mostrando o comportamento da logo, vocês também puderam reparar um video rolando no fundo, isso foi apenas uma cereja que decidimos fazer nos últimos ajustes e é apenas um embedded do youtube rolando com um estilo aplicado para não esbarrar nos aspect ratios. =D&lt;/p&gt;

&lt;hr /&gt;

&lt;h4 id=&quot;todo-o-site&quot;&gt;Todo o site&lt;/h4&gt;

&lt;p&gt;Inserimos um efeito de cursor bem conhecido que é um highlight em itens específicos do site.&lt;/p&gt;

&lt;p&gt;Utilizamos a lib &lt;a href=&quot;https://magicmousejs.web.app/&quot; target=&quot;_blank&quot;&gt;Magic Mouse&lt;/a&gt; pra realizar esse efeito e o uso dela é bem simples.&lt;/p&gt;

&lt;p&gt;Após importar os arquivos necessários pra ela funcionar, basta rodar esse código para configurar as opções do highlight do cursor.&lt;/p&gt;

&lt;p&gt;Como foi feito:&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;options&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;outerStyle&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;circle&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;hoverEffect&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;circle-move&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;hoverItemMove&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;defaultCursor&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;outerWidth&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;30&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;outerHeight&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;30&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;magicMouse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;options&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Resultado:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;./assets/img/stagefilms/efeito-magic-mouse.png&quot; alt=&quot;Imagem do efeito do cursor com o Magic Mouse&quot; /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;section-grade-de-cases&quot;&gt;Section: Grade de cases&lt;/h3&gt;

&lt;p&gt;Esta sessão foi bem tranquila, embora trabalhosa pois criar um grid desigual assim é um bom de um trabalho de formiguinha pra encaixar todos eles.&lt;/p&gt;

&lt;p&gt;Para replicar não existe muito mistério, é basicamente um display grid com uma grade específica onde nos itens maiores vc precisa aumentar o tamanho dele e pular alguns espaços da grade.&lt;/p&gt;

&lt;div class=&quot;language-css highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nc&quot;&gt;.classe-pai&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;grid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;py&quot;&gt;grid-template-rows&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;repeat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;py&quot;&gt;grid-template-columns&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;repeat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nc&quot;&gt;.classe-maior-horizontalmente&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;py&quot;&gt;grid-column-end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;span&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nc&quot;&gt;.classe-maior-verticalmente&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;py&quot;&gt;grid-row-end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;span&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Feito isso, você só precisa alinhar o conteúdo do que vc fez dentro de cada item, expandido ou não e pronto. =D&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;./assets/img/stagefilms/grid-cases.png&quot; alt=&quot;Imagem da grade de cases&quot; /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;section-carrossel-de-marcas&quot;&gt;Section: Carrossel de marcas&lt;/h3&gt;

&lt;p&gt;Talvez a sessão do site mais simples de execução por utilizar um lib também, chamada &lt;a href=&quot;https://owlcarousel2.github.io/OwlCarousel2/&quot; target=&quot;_blank&quot;&gt;OwnCarousel&lt;/a&gt;. Bem simples de utilizar mas aqui no projeto fizemos algo além de só utilizar a lib.&lt;/p&gt;

&lt;p&gt;Para ativar o carrossel com a lib basta você importar tudo que ela demanda e rodar este trecho&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;.brand-carousel&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;owlCarousel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;loop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;margin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;autoplay&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;center&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;slideTransition&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;ease-in-out&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;autoplayHoverPause&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;smartSpeed&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;600&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;autoWidth&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;responsive&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;items&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
      &lt;span class=&quot;mi&quot;&gt;600&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;items&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
      &lt;span class=&quot;mi&quot;&gt;1000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;items&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Depois de ativarmos a lib, fizemos com o &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;hover&lt;/code&gt;, um efeito de troca de imagens 100% preenchidas em branco para as logos originais com as cores das empresas.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;./assets/img/stagefilms/carrossel-marcas.png&quot; alt=&quot;Imagem do carrossel de marcas&quot; /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;section-contato&quot;&gt;Section: Contato&lt;/h3&gt;

&lt;p&gt;E pra fechar, seguindo o conceito minimalista do site, a sessão de contato foi a mais simples e sem uso de nenhuma lib. Apenas os contatos e o magic mouse que já tinha sido aplicado em todo o site.&lt;/p&gt;

&lt;p&gt;Direto e reto. Clicou falou com eles direto nos links. =D&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;./assets/img/stagefilms/contato.png&quot; alt=&quot;Imagem do contato&quot; /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;considerações-finais&quot;&gt;Considerações finais&lt;/h3&gt;

&lt;p&gt;O site foi publicado recentemente e está passando por uma avaliação dos clientes da StageFilms. Até então ele fica como está, mas estamos estudando a viabilidade de mais uma atualização pra trazer mais componentes para o site. =D&lt;/p&gt;</content><author><name>Leonardo Benedeti</name></author><category term="html" /><category term="css" /><category term="javascript" /></entry><entry><title type="html">GearApp</title><link href="/gear-app" rel="alternate" type="text/html" title="GearApp" /><published>2023-10-26T00:00:00-03:00</published><updated>2023-10-11T16:00:00-03:00</updated><id>/gear-app</id><content type="html" xml:base="/gear-app">&lt;h3 id=&quot;contexto-geral-e-história&quot;&gt;Contexto geral e história&lt;/h3&gt;

&lt;p&gt;App criado pra fugir das amarras do mundo corporativo, sim, por uma época me senti muito frustrado em alguns projetos por precisar seguir as diretrizes previamente definidas para os projetos e com isso acabei iniciando o desenvolvimento do Gear App como uma brincadeira, uma válvula de escape, pra conseguir respirar e fazer algo do meu jeito.&lt;/p&gt;

&lt;p&gt;Outro fator que corroborou foi que recentemente eu acabara de remover um app publicado da loja, não tendo nenhum app publicado diretamente por mim nas lojas, perdendo assim um diferencial gigante perante a outros profissionais na hora de uma entrevista ou algo do tipo.&lt;/p&gt;

&lt;p&gt;Passando o tempo, preenchendo essa vontade, acabei desenvolvendo um produto maior do que eu esperava e percebi que tinha não apenas um app em mãos, mas sim um negócio e o melhor de tudo, um negócio que unia minha profissão com o setor automotivo, que no caso sempre fui fã e passei horas consumindo conteúdos sobre.&lt;/p&gt;

&lt;h3 id=&quot;tecniquês&quot;&gt;Tecniquês&lt;/h3&gt;

&lt;p&gt;O projeto iniciou com uma arquitetura baseada em Clean mas um pouco mais simples e com MobX para gestão de estado. Porém com o passar do tempo o código virou uma bagunça e decidi retornar ao costumeiro Bloc, facilitando ainda mais com o uso do Cubit.&lt;/p&gt;

&lt;p&gt;Atualmente o app está publicado em ambas lojas, AppStore e Google Play e em ambas lojas com uma boa nota.&lt;/p&gt;

&lt;p&gt;Estamos atualmente estruturando mais ainda a base do app e do backoffice para começar a divulgar mais ainda o projeto e ganhar mercado, mas já estamos próximos a 1500 usuários e pouco mais de 600 seguidores no instagram.&lt;/p&gt;

&lt;p&gt;O maior feedback é que o app é muito bem feito e não trava como alguns apps do setor automotivo.&lt;/p&gt;

&lt;div class=&quot;images-grid two&quot;&gt;
  &lt;img src=&quot;../assets/img/gearapp/IMG_2620.PNG&quot; alt=&quot;&quot; /&gt;
  &lt;img src=&quot;../assets/img/gearapp/IMG_2621.PNG&quot; alt=&quot;&quot; /&gt;
&lt;/div&gt;

&lt;p&gt;Pra encontrar o app nas lojas é bem simples, só buscar por Gear App que é o primeiro a aparecer caso seu celular seja compatível.&lt;/p&gt;

&lt;p&gt;Ou você também pode entrar no site do &lt;a href=&quot;https://gearapp.com.br/&quot; target=&quot;_blank&quot;&gt;GearApp&lt;/a&gt; pra ter acesso aos links das lojas.&lt;/p&gt;

&lt;h3 id=&quot;atualizações-em-breve&quot;&gt;Atualizações…. em breve&lt;/h3&gt;</content><author><name>Leonardo Benedeti</name></author><category term="flutter" /><category term="android" /><category term="ios" /><category term="ux" /><category term="ui" /><category term="branding" /></entry><entry><title type="html">iFood Benefícios</title><link href="/ifood-beneficios-app" rel="alternate" type="text/html" title="iFood Benefícios" /><published>2022-03-04T00:00:00-03:00</published><updated>2022-03-04T16:00:00-03:00</updated><id>/ifood-beneficios-app</id><content type="html" xml:base="/ifood-beneficios-app">&lt;h3 id=&quot;contexto-geral-e-história&quot;&gt;Contexto geral e história&lt;/h3&gt;

&lt;p&gt;Minha história relacionando iFood Benefícios e Dextra iniciou dia 01/12/2020, fui contratado ainda em outubro/2020 pela Dextra para iniciar dia 01/12. Com isso minha integração foi interrompida já por uma das primeiras reuniões do projeto.&lt;/p&gt;

&lt;p&gt;Fiquei muito empolgado ao iniciar o projeto com uma gigante chamada iFood, mesmo não sendo o aplicativo principal, tínhamos uma responsabilidade imensa de criar o app de benefícios do ZERO.&lt;/p&gt;

&lt;p&gt;Inicialmente o time do projeto contava apenas com pessoas da Dextra e definimos todos os primeiros passos do projeto, que no momento ainda era tratado como um MVP, por conta do produto já existir dentro do app principal do ifood.&lt;/p&gt;

&lt;p&gt;O contexto inicial do projeto era esse: Remover o produto benefícios do app iFood Delivery, até para o próprio produto iFood Benefícios ter mais autonomia, e com isso iniciamos.&lt;/p&gt;

&lt;p&gt;Antes de me despedir do projeto(spoiler alert), fiz um &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git log&lt;/code&gt; buscando os primeiros commits para levantar essa informação.&lt;/p&gt;

&lt;p&gt;Fui o autor do 4 commit do projeto, ainda definindo os primeiros widgets e uso de themeData e design tokens.&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;(claramente ofusquei informações para não expor meus colegas)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;go&quot;&gt;commit 0599c1****************7a2cf
&lt;/span&gt;&lt;span class=&quot;gp&quot;&gt;Author: Leonardo Benedeti &amp;lt;leonardobenedeti@gmail.com&amp;gt;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;go&quot;&gt;Date:   Fri Dec 4 16:46:21 2020 -0300

    Inclusão de themeData e designTokens

commit acc0a0****************909eb
&lt;/span&gt;&lt;span class=&quot;gp&quot;&gt;Author: Leonardo Benedeti &amp;lt;leonardobenedeti@gmail.com&amp;gt;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;go&quot;&gt;Date:   Wed Dec 2 20:26:08 2020 -0300

    Criação do widget button com as suas variações e adição dele no dashbook

commit b544c5****************22508
Author: ****************
Date:   Tue Dec 1 09:44:41 2020 -0300

    Removing web folder

commit 83af1****************450ca
Author: ****************
Date:   Mon Nov 30 17:59:27 2020 -0300

    vscode on gitignore

commit 9285c****************5c4b4
Author: ****************
Date:   Mon Nov 30 17:55:47 2020 -0300

    Initial commit
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;tecniquês&quot;&gt;Tecniquês&lt;/h3&gt;

&lt;p&gt;O projeto já passou por algumas alterações de arquitetura e gestão de estado, porém ele iniciou com o seguinte setup: Arquitetura próxima ao MVVM e utilizando MobX como gestão de estado. Este primeiro setup foi decidido por conta do contexto inicial do produto, que era muito pequeno, não existindo a necessidade de algo mais robusto.&lt;/p&gt;

&lt;p&gt;O MVP cresceu, virou produto e esse produto cresce todos os dias cada vez mais.&lt;/p&gt;

&lt;p&gt;Com isso, atualmente o app com um contexto MUITO maior e já com uma escala e time gigante, optamos em migrar para um novo setup: Clean Arch e Cubit.&lt;/p&gt;

&lt;p&gt;Infelizmente não posso abrir muita coisa por se tratar de um projeto privado, mas o que posso afirmar é: Foi muito gratificante atuar num projeto onde foi possível migrar código, refatorar quando necessário e coisas do tipo.&lt;/p&gt;

&lt;h3 id=&quot;presença-na-loja&quot;&gt;Presença na loja&lt;/h3&gt;

&lt;p&gt;O app sempre teve uma nota proporcionalmente baixa em relação aos concorrentes, mas à medida que evoluímos o app conseguimos chegar num patamar de avaliações bem compatível e sempre crescendo.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;./assets/img/dextra-ciandt/ifood-beneficios/appstore.png&quot; alt=&quot;Imagem do app na loja appstore&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;fim-da-história&quot;&gt;Fim da história&lt;/h3&gt;

&lt;p&gt;Em março, completei 1 ano e 4 meses de projeto. Projeto que no início foi bem conturbado e tortuoso por conta de estarmos descobrindo como o produto seria. Passamos por marés muito agitadas e atualmente o projeto se encontra em águas bem mansas, e como diz o ditado: maré calma nunca fez bom marinheiro, decidi sair do projeto para buscar novos desafios. Mas calma, tudo isso ainda atuando pela CI&amp;amp;T, apenas vou trocar de projeto e antes de iniciar no novo desafio, também optei por tirar umas férias para descansar.&lt;/p&gt;

&lt;p&gt;Com isso, hoje dia 04/03, último dia antes das férias, encerro minha participação no projeto iFood Benefícios mas mantenho o carinho pelo projeto, que vi crescer literalmente do zero. #vaiFilhão&lt;/p&gt;</content><author><name>Leonardo Benedeti</name></author><category term="flutter" /><category term="android" /><category term="ios" /><category term="ux" /><category term="ui" /><category term="branding" /></entry><entry><title type="html">Site Turbocast</title><link href="/site-turbocast" rel="alternate" type="text/html" title="Site Turbocast" /><published>2021-02-28T00:00:00-03:00</published><updated>2021-02-28T16:00:00-03:00</updated><id>/site-turbocast</id><content type="html" xml:base="/site-turbocast">&lt;p&gt;Quem me conhece sabe. Sou viciado no mundo dos carros e estou sempre envolvido de alguma forma e sempre consumi muito conteúdo gear head e o Turbocast é um desses casos.&lt;/p&gt;

&lt;p&gt;O Turbocast é um podcast formado por 5 apresentadores e mais algumas pessoas ajudando em volta, a maior parte do conteúdo é sobre carros, mas sempre rola uma resenha geral sobre assuntos gerais e sempre que podem mantém o foco no mundo automotivo.&lt;/p&gt;

&lt;h3 id=&quot;contexto-do-desafio&quot;&gt;Contexto do desafio:&lt;/h3&gt;

&lt;p&gt;Criar um bot para gravação de áudio no discord…. sim. Nada a ver com o projeto que descrevo aqui. 
Como isso aconteceu? Vi um post no instagram do TC buscando desenvolvedores para o tal bot, porém não explicaram direito e decidi trocar uma ideia.&lt;/p&gt;

&lt;p&gt;Acabamos evoluindo um pouco o papo e acabamos pensando o seguinte: O bot não resolveria o problema deles, já que o bot atual dependia do discord e no caso o problema era do discord e não do bot.&lt;/p&gt;

&lt;p&gt;Com isso reparei que eles não tinham um site e propus criar. Dai sim chegamos no contexto correto rsrs&lt;/p&gt;

&lt;h3 id=&quot;desenvolvimento&quot;&gt;Desenvolvimento&lt;/h3&gt;

&lt;p&gt;O site foi pensado para ser o mais simples possível. Daí criei uma landing page simples contendo poucas sections, na sua maioria institucional, falando sobre a empresa, mostrando seus integrantes e onde podem ser encontrados.&lt;/p&gt;

&lt;p&gt;Vou destacar aqui no post apenas duas sections, onde tive um pouco mais de trabalho pra criar algo que pensamos no momento da ideia.&lt;/p&gt;

&lt;p&gt;Porém para ver o site todo, basta abrir o site: &lt;a href=&quot;https://turbocast.com.br&quot; target=&quot;_blank&quot;&gt;turbocast.com.br&lt;/a&gt;&lt;/p&gt;

&lt;h4 id=&quot;section-escute-nosso-último-episódio&quot;&gt;Section: Escute nosso último episódio&lt;/h4&gt;

&lt;p&gt;O contexto para esta section, foi bem simples: precisamos mostrar o último ep do podcast. Inicialmente fizemos manualmente, toda quarta feira o link da publicação era substituído. Porém toda publicação que envolve outros players é como nos blogs e gera um RSS feed, neste caso, pegamos o feed público do canal deles no Anchor, plataforma de podcasts do Spotify e a partir desse RSS feed, montamos o player automaticamente com o último ep do feed.&lt;/p&gt;

&lt;p&gt;Com isso, toda quarta feira, data de publicação do turbocast, o site já abre com o novo ep disponível para escutar no próprio site usando o player do anchor.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;./assets/img/site-turbocast/ultimo-ep.png&quot; alt=&quot;Imagem da section último episódio&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Como foi feito:&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;podcastCode&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;xpto123&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;podcastName&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;nomeDoPodcast&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;url&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;`https://anchor.fm/s/&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;podcastCode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;/podcast/rss`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;lastEpisode&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;.lastEpisode&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;loadEpisode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ajax&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;GET&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;dataType&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;xml&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;done&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;xml&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;// Aqui já com o XML do RSS, navegamos pra encontrar os valores que precisamos pra montar a URL do último EP.&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;channel&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;xml&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;find&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;channel&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;lastItem&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;channel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;find&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;first&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;urlEpisode&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;lastItem&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;find&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;link&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;embeddedUrl&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;`https://anchor.fm/&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;podcastName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;/embed/episodes/&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;urlEpisode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;pop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;embeddedUrl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;// Aqui já com a embeddedUrl montada, criamos um iframe para montar o player direto no site. &lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;lastEpisode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;html&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;`&amp;lt;iframe src=&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;embeddedUrl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot; height=&quot;200px&quot; width=&quot;400px&quot; frameborder=&quot;0&quot; scrolling=&quot;no&quot;&amp;gt;&amp;lt;/iframe&amp;gt;`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;fail&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;lastEpisode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;hide&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;loadEpisode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;hr /&gt;

&lt;h4 id=&quot;section-integrantes&quot;&gt;Section: Integrantes&lt;/h4&gt;

&lt;p&gt;O contexto desta section, surgiu por um motivo: não sabia qual integrante vinha antes. Ao perguntar, gerei dúvidas no povo do turbocast também. 
Daí fiz algo para resolver o problema, montei uma lista de integrantes e fiz um sort. rsrsrs&lt;/p&gt;

&lt;p&gt;Portanto, toda vez que abrir o site, os integrantes serão exibidos de forma aleatória. =D&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;./assets/img/site-turbocast/integrantes.png&quot; alt=&quot;Imagem da section integrantes&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Como foi feito:&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;integrantes&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;gueds&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;camilo&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;hud&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;romulo&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;vini&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;sort&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Math&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;random&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// Após definir randomicamente os integrantes com o .sort(), bastou montar as imagens na section&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;considerações-finais&quot;&gt;Considerações finais&lt;/h3&gt;

&lt;p&gt;Após criar o site, virei o menino da TI do podcast.&lt;/p&gt;

&lt;p&gt;Hoje temos alguns projetos em conjunto em andamento, ainda secretos mas em andamento.&lt;/p&gt;

&lt;p&gt;Vale deixar aqui registrado um agradecimento ao Turbocast, que foi meu primeiro case unindo minha paixão pelo meio automotivo com a minha profissão. Tamo junto povo. =D&lt;/p&gt;</content><author><name>Leonardo Benedeti</name></author><category term="html" /><category term="css" /><category term="javascript" /><category term="branding" /></entry><entry><title type="html">Pruuu App</title><link href="/pruuu-app" rel="alternate" type="text/html" title="Pruuu App" /><published>2020-11-12T00:00:00-03:00</published><updated>2020-11-12T16:00:00-03:00</updated><id>/pruuu-app</id><content type="html" xml:base="/pruuu-app">&lt;p&gt;Recentemente, participei de um processo seletivo para uma empresa e para ser avaliado tecnicamente o desafio era criar uma app, utilizando detalhes específicos da empresa que criou o desafio.&lt;/p&gt;

&lt;p&gt;Questionei a recrutadora sobre a possibilidade de criar um app sem vínculos com a empresa para manter esse app como desafio para outras oportunidades também. E também porque gostei do desafio e acabei empolgando rsrs&lt;/p&gt;

&lt;h3 id=&quot;contexto-do-desafio&quot;&gt;Contexto do desafio:&lt;/h3&gt;

&lt;p&gt;Criar um microblog onde você tenha uma mecanica parecida com a do Twitter mas com uma nova identidade e é claro, feito em Flutter.&lt;/p&gt;

&lt;h3 id=&quot;contexto-do-que-foi-prototipado&quot;&gt;Contexto do que foi prototipado:&lt;/h3&gt;

&lt;p&gt;Antes das redes sociais, para você saber das novidades e comentar as suas próprias, tudo era falado pessoalmente e o lugar mais adequado para esse tipo de interação eram as praças.&lt;/p&gt;

&lt;p&gt;Daí trazendo o contexto para dentro do app vinculando com o twitter, que tem um pássaro como logo, pensei numa identidade toda voltada para o bicho mais populoso das praças, o POMBO. rsrsrs&lt;/p&gt;

&lt;p&gt;Com isso criei uma interface simples, com apenas duas cores e com imagens trazendo a identidade de pombos para cada ação.&lt;/p&gt;

&lt;h3 id=&quot;protótipo-criado&quot;&gt;Protótipo criado&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;./assets/img/pruuu/prototipo.png&quot; alt=&quot;Imagem do protótipo&quot; /&gt;&lt;/p&gt;

&lt;p&gt;No momento da escrita deste post, o projeto já se encontra funcional e rodando a plenos pulmões.&lt;/p&gt;

&lt;p&gt;O preço do download e teste do app é enviar o feedback, sendo falando o que achou ou caso tenha encontrado algum erro. =D&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/leonardobenedeti/flutter-app-pruuu-microblog/blob/master/binaries/app-release.apk?raw=true&quot; target=&quot;_blank&quot;&gt;Baixar apk&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Para ver como está sendo feito, acesse o link abaixo e veja tudo no repositório, claro, está ficando tudo aberto.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/leonardobenedeti/flutter-app-pruuu-microblog&quot; target=&quot;_blank&quot;&gt;Repositório do Pruuu&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;PS.: Evitem Pull Requests. Porque ? Como é um app que estou criando para mostrar o que o Leonardo Benedeti sabe, eu incluir código criado por outras pessoas é maneiro no contexto código aberto, mas pode gerar confusão quando eu for ser avaliado. =D&lt;/p&gt;</content><author><name>Leonardo Benedeti</name></author><category term="flutter" /><category term="android" /><category term="ios" /><category term="ux" /><category term="ui" /><category term="branding" /></entry><entry><title type="html">[Tutorial] - Email sender with Sendgrid on Heroku</title><link href="/heroku-mail-sender-with-sendgrid" rel="alternate" type="text/html" title="[Tutorial] - Email sender with Sendgrid on Heroku" /><published>2019-10-07T00:00:00-03:00</published><updated>2019-10-07T16:00:00-03:00</updated><id>/heroku-mail-sender-with-sendgrid</id><content type="html" xml:base="/heroku-mail-sender-with-sendgrid">&lt;p&gt;Pensando como melhorar algumas plataformas que tenho online encontrei o Sendgrid dentro do nosso velho amigo Heroku.&lt;/p&gt;

&lt;p&gt;A Sendgrid é uma plataforma de envio de emails transacionais e de marketing.&lt;/p&gt;

&lt;p&gt;Abaixo vão dois links explicando melhor os detalhes:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://sendgrid.com/&quot; target=&quot;_blank&quot;&gt;Site oficial&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://elements.heroku.com/addons/sendgrid&quot; target=&quot;_blank&quot;&gt;Link para o add-on dentro do heroku&lt;/a&gt;(recomendo vir por aqui)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Agora já conhecendo melhor a plataforma, vamos configurar tudo para criar nossos emails transacionais.&lt;/p&gt;

&lt;p&gt;O primeiro passo é provisionar o add-on do Sendgrid dentro do Heroku.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;assets/img/sendgrid/1.0-provision-heroku.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Com o add-on configurado essa é o dashboard da plataforma.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;assets/img/sendgrid/2.0-dashboard.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Dentro do dashboard precisamos realizar duas configurações básicas são:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;1 - Criar uma api key no dashboard 
&lt;br /&gt;&lt;a href=&quot;https://app.sendgrid.com/settings/api_keys&quot; target=&quot;_blank&quot;&gt;Settings &amp;gt; API KEY&lt;/a&gt;
&lt;img src=&quot;assets/img/sendgrid/3.0-config-api-key.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;2 - Configurar a api key como variável no heroku
&lt;img src=&quot;assets/img/sendgrid/4.0-config-api-on-heroku.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Após as configurações básicas precisamos criar e testar um template ainda pelo dashboard&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Menu de templates
&lt;img src=&quot;assets/img/sendgrid/5.0-menu-templates.png&quot; alt=&quot;&quot; /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Aqui basta criar o template como preferir, usando a interface de arrasta e solta ou usando HTML&lt;/p&gt;

&lt;p&gt;Após criar o template precisamos testar e pra isso na própria plataforma temos um sandbox para enviar o email.
&lt;img src=&quot;assets/img/sendgrid/6.0-preview-and-test-template.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Ao enviar o email via sandbox, podemos conferir a caixa de entrada do email escolhido para receber o teste.
&lt;img src=&quot;assets/img/sendgrid/7.0-first-test-by-preview.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Podemos perceber que a variável user ainda está sem preenchimento. Vamos agora criar o backend para enviar o email de forma transacional.&lt;/p&gt;

&lt;h3 id=&quot;nodejs&quot;&gt;NodeJs&lt;/h3&gt;

&lt;p&gt;Para exemplificar o uso da plataforma criei um projeto e estou mantendo no meu github.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/leonardobenedeti/heroku-mail-sender&quot; target=&quot;_blank&quot;&gt;
  Link do repo
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Ou você pode ‘deployar’ direto no heroku clicando abaixo&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://heroku.com/deploy?template=https://github.com/leonardobenedeti/heroku-mail-sender&quot; target=&quot;_blank&quot;&gt;
  &lt;img src=&quot;https://www.herokucdn.com/deploy/button.svg&quot; alt=&quot;Deploy&quot; /&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;A base do código é o que busquei na doc oficial do Sendgrid para nodejs.&lt;/p&gt;

&lt;p&gt;Import e configuração da API KEY que criamos anteriormente.&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;sgMail&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;@sendgrid/mail&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;sgMail&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;setApiKey&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;process&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;env&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;SENDGRID_APIKEY&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Código base utilizando o template que criamos enviando todos os parametros no request.&lt;/p&gt;
&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;post&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;/sendmail/template&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;req&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;res&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;to&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;template_data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;req&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;body&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;msg&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;to&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;to&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;from&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;templateId&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;d-ee4c43022cc74cec802e5398cb54a31f&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;dynamic_template_data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;template_data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;sgMail&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;send&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;msg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;success&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;res&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;status&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;200&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;send&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;success&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Email enviado com sucesso&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}).&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;catch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;err&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;res&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;status&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;400&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;send&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Algo de errado não está certo no envio de emails.&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}));&lt;/span&gt; 
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Com todo código configurado e rodando localmente vamos aos testes via postman.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;assets/img/sendgrid/8.0-request-postman.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Após o teste, podemos perceber que o parametro de usuário foi preenchido de acordo com o request via postman.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;assets/img/sendgrid/9.0-result-postman.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Dai pra frente, precisamos criar um template customizado para cada caso e transacionar como preferir. =D&lt;/p&gt;</content><author><name>Leonardo Benedeti</name></author><category term="heroku" /><category term="node.js" /><category term="sendgrid" /></entry><entry><title type="html">[POC] - Swipe up component com Ionic</title><link href="/poc-swipeup-components-ionic3" rel="alternate" type="text/html" title="[POC] - Swipe up component com Ionic" /><published>2019-09-10T00:00:00-03:00</published><updated>2019-09-10T16:00:00-03:00</updated><id>/poc-swipeup-components-ionic3</id><content type="html" xml:base="/poc-swipeup-components-ionic3">&lt;p&gt;Trabalhando em um projeto de curioso, ‘precisei’ fazer um swipe up em android nativo, com uma lib resolvi o problema e vida que segue.&lt;/p&gt;

&lt;p&gt;Porém fiquei curioso em saber se o Ionic seria capaz de fazer a mesma coisa.&lt;/p&gt;

&lt;p&gt;Iniciando uma busca, encontrei muita coisa mas nada funcionou 100% até encontrar esse tutorial que mostra como fazer e de uma maneira tão simples que vou deixar a referência logo no início.
&lt;a href=&quot;https://www.joshmorony.com/how-to-create-a-sliding-drawer-component-for-ionic-2/&quot; target=&quot;_blank&quot;&gt;Post referência&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;No post ele comenta um pouco sobre manipulação de DOM e como utilizar o &lt;a href=&quot;https://hammerjs.github.io/&quot;&gt;Hammer.js&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;No post original ele faz apenas o swipe, para abrir e fechar. Porém eu queria algumas coisa a mais.&lt;/p&gt;

&lt;p&gt;Como:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Abrir o componente clicando, mantendo o efeito&lt;/li&gt;
  &lt;li&gt;Abrir o componente clicando em um botão fora do contexto do componente&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Brinde:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Ajustar o css para ficar parecido com o componente normalmente usado nos apps atuais&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Listando as tarefas, vamos ao que precisei alterar.&lt;/p&gt;

&lt;h4 id=&quot;abrir-o-componente-clicando-mantendo-o-efeito&quot;&gt;Abrir o componente clicando, mantendo o efeito&lt;/h4&gt;

&lt;p&gt;Usando os eventos do Hammer.js apenas precisei incluir o &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;tap&lt;/code&gt; na lista de eventos para funcionar. Suave!&lt;/p&gt;

&lt;div class=&quot;language-typescript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;hammer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;tap&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ev&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;O método &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;open()&lt;/code&gt; utiliza o DomController para manipular e animar o que precisamos, da seguinte maneira:&lt;/p&gt;

&lt;div class=&quot;language-typescript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt; 
    &lt;span class=&quot;c1&quot;&gt;// Este metodo já existia no tutorial original, apenas isolei em um método para controlar &apos;por fora&apos;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;domCtrl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;write&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;renderer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;setElementStyle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;element&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;nativeElement&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;transition&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;top 0.5s&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;renderer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;setElementStyle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;element&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;nativeElement&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;top&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;  &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;handleTop&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;px&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Com isso consegui com um clique na tela abrir o componente com o mesmo efeito do swipe. TOP.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Próximo…&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h4 id=&quot;abrir-o-componente-clicando-em-um-botão-fora-do-contexto-do-componente-com-parametros&quot;&gt;Abrir o componente clicando em um botão fora do contexto do componente, com parametros&lt;/h4&gt;

&lt;p&gt;Aqui tinha um desafio maior, sem nada na doc, afinal, estava fora do contexto do Hammer.js para conseguir manipular.&lt;/p&gt;

&lt;p&gt;Com isso precisei recorrer ao Events do angular para fazer essa comunicação entre componentes.&lt;/p&gt;

&lt;p&gt;Código da page home, envia o evento para algum lugar do app que escute.&lt;/p&gt;

&lt;div class=&quot;language-typescript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;callDetails&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;events&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;publish&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;dados&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Dados via parametro&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Código do componente onde o listener fica esperando o evento para iniciar o método &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;open()&lt;/code&gt;.&lt;/p&gt;

&lt;div class=&quot;language-typescript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;constructor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;events&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Events&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;cm&quot;&gt;/* outros controllers...*/&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;events&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;subscribe&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;details&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;dados&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// olha ele ai de novo. =D&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;Mais uma pra dentro.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h4 id=&quot;ajustar-o-css-para-ficar-parecido-com-o-componente-normalmente-usado-nos-apps-atuais&quot;&gt;Ajustar o css para ficar parecido com o componente normalmente usado nos apps atuais&lt;/h4&gt;

&lt;p&gt;O &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;css&lt;/code&gt; do exemplo original, é literalmente um quadrado que faz o swipe up com o conteúdo da página.&lt;/p&gt;

&lt;p&gt;Para o exemplo que eu estava trabalhando precisei alterar isso um pouco.&lt;/p&gt;

&lt;p&gt;Exemplo do Josh:
&lt;img src=&quot;assets/img/ionic-swipe-up/example-josh.gif&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Vamos aos ajustes que fiz. Pouca coisa mas já deu uma diferença e mostra o que podemos ajustar para ficar do gosto que precisamos.&lt;/p&gt;

&lt;div class=&quot;language-scss highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;content-drawer&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;background&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;map-get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$colors&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;primary&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;100%&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;100%&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;position&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;absolute&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;z-index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;10&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;important&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;box-shadow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0px&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;-4px&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;22px&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;-8px&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;rgba&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;.75&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;border-radius&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;20px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;text-align&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;center&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;map-get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$colors&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;light&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    
    &lt;span class=&quot;nc&quot;&gt;.linha&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nl&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;40%&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;nl&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;4px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;nl&quot;&gt;margin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;16px&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;auto&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;40px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;nl&quot;&gt;border-radius&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;26px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;nl&quot;&gt;background&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;map-get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$colors&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;light&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Resultado com os ajustes de css acima:
&lt;img src=&quot;assets/img/ionic-swipe-up/result-leo.gif&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Com isso encerro o exemplo com os ajustes necessários.&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;brinde&quot;&gt;Brinde&lt;/h3&gt;

&lt;p&gt;Esse exemplo publiquei no gh-pages de maneira bem automática. Como?&lt;/p&gt;

&lt;p&gt;O github pages é um “server” que hospeda páginas estáticas, como esta que você está vendo.&lt;/p&gt;

&lt;p&gt;Para publicar um app web ionic temos alguns truques.&lt;/p&gt;

&lt;p&gt;Antes de qualquer truque precisamos instalar os packages para isso.&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;npm &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;angular-cli-ghpages &lt;span class=&quot;nt&quot;&gt;--save&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Após instalar basta colar esse código dentro de scripts para automatizar tudo. Build e deploy.&lt;/p&gt;

&lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nl&quot;&gt;&quot;scripts&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;gh-pages&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;ionic build --base-href &apos;https://leonardobenedeti.github.io/ionic3-swipe-up-component/&apos; --prod &amp;amp;&amp;amp; npx ngh --dir=www/&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Com esse script, automaticamente o package do gh-pages cria a branch e publica tudo pra você. =D&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://leonardobenedeti.github.io/ionic3-swipe-up-component/&quot;&gt;Link do projeto publicado rodando&lt;/a&gt;&lt;/p&gt;</content><author><name>Leonardo Benedeti</name></author><category term="ionic" /><category term="github pages" /><category term="Hammer.js" /></entry></feed>