<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.6.2">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2019-02-18T10:26:48-03:00</updated><id>http://localhost:4000/</id><title type="html">Leonardo Benedeti</title><subtitle>Meu site e base de conhecimento</subtitle><author><name>Leonardo Benedeti</name></author><entry><title type="html">[Tutorial] - App Heroku: Flask com MySQL</title><link href="http://localhost:4000/heroku-python-mysql" rel="alternate" type="text/html" title="[Tutorial] - App Heroku: Flask com MySQL" /><published>2019-02-15T00:00:00-02:00</published><updated>2019-02-15T17:00:00-02:00</updated><id>http://localhost:4000/heroku-python-mysql</id><content type="html" xml:base="http://localhost:4000/heroku-python-mysql">&lt;p&gt;&lt;img src=&quot;assets/img/tutoriais/python-mysql/imagem-post.png&quot; style=&quot;margin:40px auto 10px;&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center;&quot;&gt;** Dessa vez foi no caderno da firma rsrs&lt;/p&gt;

&lt;p&gt;Em um projeto na empresa que trabalho, em uma POC para a frente Mobile, precisamos criar uma API para um projeto mobile, porém como era uma POC precisavamos fazer o teste com o menor custo possível, se possível zero.&lt;/p&gt;

&lt;p&gt;Com isso em mente, criamos tudo no Heroku e abaixo vai um pequeno passo a passo de como configurar um App no Heroku usando:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Python Flask - para consultar os dados no banco e responder ao client&lt;/li&gt;
  &lt;li&gt;MySQL ClearDB - Addon do Heroku que permite criar um DB de até 5MB(mais que suficiente para uma POC)&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;primeiro-passo-configurar-o-app-no-heroku-com-o-addon-mysql&quot;&gt;Primeiro passo: Configurar o app no Heroku com o Addon MySQL&lt;/h4&gt;

&lt;p&gt;Para conseguirmos fazer tudo o que pretendemos precisamos deixar tudo configurado e vamos fazer isso aqui.&lt;/p&gt;

&lt;p&gt;Começando pela criação do app no Heroku:
&lt;img src=&quot;assets/img/tutoriais/python-mysql/criar-app-1.png&quot; style=&quot;margin:20px auto 10px;&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;assets/img/tutoriais/python-mysql/criar-app-2.png&quot; style=&quot;margin:10px auto 40px;&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Após criar o aplicativo vamos precisar incluir os addons, no caso vamos incluir um addon para storage MySQL.
O addon escolhido foi o ClearDB pela facilidade e ter uma faixa gratuita.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;assets/img/tutoriais/python-mysql/config-addons-1.png&quot; style=&quot;margin:20px auto 10px;&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Na imagem acima é preciso clicar em configure add-ons e com isso será direcionado para uma página onde a busca da imagem abaixo será mostrada.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;assets/img/tutoriais/python-mysql/config-addons-2.png&quot; style=&quot;margin:10px auto 40px;&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Agora com o Add-on configurado precisamos nos conectar no banco para criar as tabelas e incluir dados para consumir.&lt;/p&gt;

&lt;p&gt;Para isso precisamos ir até as configurações de nosso app e abrir as variáveis de configuração.&lt;/p&gt;

&lt;p&gt;Lá vamos encontrar todos os dados para conectar com o banco.&lt;/p&gt;

&lt;p&gt;Com o seguinte formato:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mysql://[user]:[passwd]@[host]/[default_schema]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;assets/img/tutoriais/python-mysql/config-vars-mysql.png&quot; style=&quot;margin:10px auto 40px;&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;segundo-passo-criar-as-tabelas-e-incluir-dados&quot;&gt;Segundo passo: Criar as tabelas e incluir dados&lt;/h4&gt;

&lt;p&gt;Para este item eu costumo utilizar o MySQL Workbench, mas qualquer cliente, inclusive terminal pode ser utilizado.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;assets/img/tutoriais/python-mysql/mysql-wb.png&quot; style=&quot;margin:10px auto 40px;&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Após conectar, crie suas tabelas e dados, eu criei uma tabela simples para exemplificar.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;CREATE TABLE users (
  idusers INT NOT NULL,
  name VARCHAR(45) NULL,
  phone VARCHAR(45) NULL,
  PRIMARY KEY (idussers)
);
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;terceiro-passo-subir-a-app-no-heroku-com-um-hello-world&quot;&gt;Terceiro passo: Subir a app no heroku com um hello world&lt;/h4&gt;

&lt;p&gt;Um aplicação python no heroku requer alguns cuidados para subir certinho e vamos passar por todos aqui.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;requirements.txt&lt;/strong&gt;
Arquivo responsável por abrigar todos as libs que vamos importar no projeto. O próprio nome já diz certo? Requirements. =D&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Flask-MySQLdb==0.2.0
gunicorn==19.8.1
mysqlclient==1.3.12
Flask==0.12.2
Flask-Cors==3.0.3
Flask-MySQL==1.4.0
PyMySQL==0.8.1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Nesse caso temos algumas libs que vamos precisar. Básicamente todas girando no universo do Flask e MySQL&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Procfile&lt;/strong&gt;
Arquivo exclusivo do heroku para inicializar os apps. Ele pode abrigar scripts para iniciar sua aplicação.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;web: gunicorn api:app
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Nesse caso o trecho procura a app dentro do arquivo api e inicia utulizando o gunicorn&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;api.py&lt;/strong&gt;
Arquivo principal da aplicação. Aqui temos todos os códigos básicos para retornar um response.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;flask&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Flask&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;jsonify&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;flask.ext.mysql&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MySQL&lt;/span&gt; 

&lt;span class=&quot;n&quot;&gt;app&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Flask&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;__name__&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;mysql&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MySQL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# MySQL configurations  #### REVER trecho de configuração para buscar as informações&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'MYSQL_DATABASE_USER'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'USER'&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'MYSQL_DATABASE_PASSWORD'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'PASSWD'&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'MYSQL_DATABASE_DB'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'DEFAULT_SCHEMA'&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'MYSQL_DATABASE_HOST'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'HOST'&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;mysql&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;init_app&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;


&lt;span class=&quot;c&quot;&gt;# routes&lt;/span&gt;
&lt;span class=&quot;nd&quot;&gt;@app.route&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'/'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;methods&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;GET&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;conn&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mysql&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;connect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;cursor&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;conn&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cursor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;users&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cursor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;execute&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;SELECT * FROM users&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;users&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cursor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fetchall&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;conn&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;close&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;jsonify&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;users&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;


&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;__name__&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;__main__&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;debug&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;por-último-os-resultados-dessa-saga&quot;&gt;Por último os resultados dessa saga.&lt;/h4&gt;

&lt;p&gt;Temos duas maneiras de testar:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Localmente&lt;/strong&gt;
Com o heroku cli baixado temos um recurso para utilizar com as mesmas configurações do app, porém localmente.
Para isso basta digitar no terminal, dentro da pasta do projeto.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;heroku local web
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Este comando irá iniciar localmente um server de acordo com o seu app, normalmente na porta 5000.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;assets/img/tutoriais/python-mysql/result-local.png&quot; style=&quot;margin:10px auto 40px;&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Publicando&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Para publicar o app no heroku basta fazer um &lt;code class=&quot;highlighter-rouge&quot;&gt;git push heroku master&lt;/code&gt;. Como o heroku é baseado em git ele vai entender o commit e iniciar o build com os novos códigos.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;assets/img/tutoriais/python-mysql/commit-final.png&quot; style=&quot;margin:10px auto;&quot; alt=&quot;&quot; /&gt;
** ignorem o –force do comando, não é necessário. Tinha outra aplicação rodando nesse link e o merge não seria tão amigável rsrs&lt;/p&gt;

&lt;p&gt;Após o build acima basta clicar no link que o CLI retornou et voilá.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;assets/img/tutoriais/python-mysql/result-publicado.png&quot; style=&quot;margin:10px auto 40px;&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Caso queira baixar os códigos para criar sua API FLASK acesse o repo&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/leonardobenedeti/api-flask-with-mysql&quot; target=&quot;_blank&quot;&gt;GitHub - api-flask-with-mysql&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Leonardo Benedeti</name></author><category term="python" /><category term="mysql" /><category term="heroku" /></entry><entry><title type="html">Aplicativo Bier Prosit</title><link href="http://localhost:4000/ionic-app-bier-prosit" rel="alternate" type="text/html" title="Aplicativo Bier Prosit" /><published>2019-01-03T00:00:00-02:00</published><updated>2019-01-03T17:00:00-02:00</updated><id>http://localhost:4000/ionic-app-bier-prosit</id><content type="html" xml:base="http://localhost:4000/ionic-app-bier-prosit">&lt;p&gt;&lt;img src=&quot;assets/img/bierprosit/imagem-post.png&quot; style=&quot;margin:40px auto;&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Projeto criado em conjunto ao Bier Prosit focado em resolver alguns problemas em lojas e empórios focados em cervejas especiais. 
Principal dor: Apesar do atendimento focado na informação do produto, os clientes da loja ainda sim não questionavam tudo o que precisavam saber sobre o produto.&lt;/p&gt;

&lt;p&gt;Inicialmente o MVP foi pensado para apenas ler o código de barras da cerveja e mostrar ao usuário sua informação mais detalhada.&lt;/p&gt;

&lt;p&gt;Com essa base, o app foi ganhando novas funcionalidades como: Cardápio completo, Dicas, Cupons, Lista de desejos, Avaliações dos produtos e Foto personalizada do Bier!&lt;/p&gt;

&lt;p&gt;Para explicar melhor o projeto vamos separar em tópicos&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Arquitetura básica&lt;/li&gt;
  &lt;li&gt;Painel administrativo / API&lt;/li&gt;
  &lt;li&gt;Aplicativo&lt;/li&gt;
  &lt;li&gt;Publicação&lt;/li&gt;
  &lt;li&gt;Sustentação&lt;/li&gt;
&lt;/ol&gt;

&lt;blockquote&gt;
  &lt;p&gt;Vale ressaltar que o projeto foi idealizado e iniciado pela empresa All Most, que foi constituida por 4 amigos, Leonardo Benedeti(este que vos escreve), Mateus Diniz, Marcus Paulo e Michael Almeida. Atualmente não integro mais o time da All Most e como era o único desenvolvedor mobile, segui com o desenvolvimento sozinho, fora da All Most.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h4 id=&quot;1-arquitetura-básica&quot;&gt;1. Arquitetura básica&lt;/h4&gt;
&lt;p&gt;&lt;img src=&quot;assets/img/bierprosit/arq-bier.jpeg&quot; style=&quot;margin:40px auto 5px;&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center;&quot;&gt;** Sim, desenhei num flipchart e tirei foto =D&lt;/p&gt;

&lt;h4 id=&quot;2-painel-administrativo--api&quot;&gt;2. Painel administrativo / API&lt;/h4&gt;
&lt;p&gt;Criado utilizando &lt;code class=&quot;highlighter-rouge&quot;&gt;PHP&lt;/code&gt;, sem utilização de nenhum framework. O painel é responsável por gerenciar todos os produtos, sendo efetuando o cadastro, alteração ou exclusão de algum produto e emitir push notifications para o app, seja a cada produto cadastrado ou alguma mensagem customizada, de acordo com a vontade do Bier Prosit.&lt;/p&gt;

&lt;p&gt;Os produtos são salvos em uma base de dados &lt;code class=&quot;highlighter-rouge&quot;&gt;MySQL&lt;/code&gt; e toda conexão com ele é feita pelo painel. #phpraiz&lt;/p&gt;

&lt;p&gt;Em breve o painel será atualizado para a linguagem &lt;code class=&quot;highlighter-rouge&quot;&gt;Python&lt;/code&gt; e será &lt;code class=&quot;highlighter-rouge&quot;&gt;API Based&lt;/code&gt; utilizando &lt;code class=&quot;highlighter-rouge&quot;&gt;Flask&lt;/code&gt;, provavelmente com front-end em &lt;code class=&quot;highlighter-rouge&quot;&gt;Angular&lt;/code&gt; ou &lt;code class=&quot;highlighter-rouge&quot;&gt;React&lt;/code&gt;.&lt;/p&gt;

&lt;h4 id=&quot;3-aplicativo&quot;&gt;3. Aplicativo&lt;/h4&gt;
&lt;p&gt;A primeira versão foi criada utilizando &lt;code class=&quot;highlighter-rouge&quot;&gt;Android Nativo&lt;/code&gt; e com o lançamento do &lt;code class=&quot;highlighter-rouge&quot;&gt;Ionic 1&lt;/code&gt; migrei para o framework, com a atualização foi feito o upgrade para a versão 3 do framework.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Funcionalidades&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Consulta de produtos na API&lt;/li&gt;
  &lt;li&gt;Criação de listas de desejo&lt;/li&gt;
  &lt;li&gt;Avaliação de produtos baseado na lista de desejos&lt;/li&gt;
  &lt;li&gt;Leitura de QR Code&lt;/li&gt;
  &lt;li&gt;Captura de imagens e ao finalizar a captura, inclusão da logo do Bier na foto&lt;/li&gt;
  &lt;li&gt;Compartilhamento de fotos nas redes sociais que o usuário utilizar&lt;/li&gt;
  &lt;li&gt;Push Notification&lt;/li&gt;
  &lt;li&gt;DeepLink, ao clicar em um push de um produto específico, o usuário é direcionado para a página de detalhes do produto&lt;/li&gt;
  &lt;li&gt;Rotas até o Bier, ao clicar para exibir a rota o app sugere todos os apps que são capazes de criar uma rota. ex.: Uber, 99, Google Maps…&lt;/li&gt;
  &lt;li&gt;Novidades podem vir por ai… =D&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;4-publicação&quot;&gt;4. Publicação&lt;/h4&gt;
&lt;p&gt;Finalizado o desenvolvimento do app, o mesmo foi submetido para a AppStore e Google Play, todas as telas são diferentes por conta do framework Ionic, ele consegue diferenciar ambas plataformas e tornar a UX mais fluida possível para o usuário ter a sensação que está utilizando um app nativo.&lt;/p&gt;

&lt;p&gt;Para baixar o app ou visualizar as telas você pode acessar os links abaixo ou ler o QR Code.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://itunes.apple.com/br/app/bier-prosit/id1211795341&quot; target=&quot;_blank&quot;&gt;AppStore&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://play.google.com/store/apps/details?id=br.com.leonardobenedeti.bierprosit&quot; target=&quot;_blank&quot;&gt;GooglePlay&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;assets/img/bierprosit/qr-post.png&quot; style=&quot;margin:40px auto 5px;&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;5-sustentação&quot;&gt;5. Sustentação&lt;/h4&gt;
&lt;p&gt;Após a publicação do app, bugs e melhorias serão ajustados para manter o app funcionando normalmente.&lt;/p&gt;

&lt;p&gt;Caso tenha encontrado algum bug ou melhoria reporte e ajude o app a ficar mais completo.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://goo.gl/forms/7pgNxSLakCyOVgiy1&quot; target=&quot;_blank&quot;&gt;Melhorias e Sugestões&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://goo.gl/forms/99WNF42lMfq1UmOJ2&quot; target=&quot;_blank&quot;&gt;Bugs&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Leonardo Benedeti</name></author><category term="ionic" /><category term="php" /><category term="ios" /><category term="android" /><category term="cloud" /><category term="google play" /><category term="app store" /></entry><entry><title type="html">RioSulValley / Página de Eventos</title><link href="http://localhost:4000/events-page-from-riosulvalley" rel="alternate" type="text/html" title="RioSulValley / Página de Eventos" /><published>2018-04-17T00:00:00-03:00</published><updated>2018-04-17T14:32:16-03:00</updated><id>http://localhost:4000/events-page-from-riosulvalley</id><content type="html" xml:base="http://localhost:4000/events-page-from-riosulvalley">&lt;p&gt;&lt;img src=&quot;assets/img/rsv/eventos.png&quot; style=&quot;margin:40px auto;&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Depois de um longo papo sobre fazer ou não uma pagina de eventos e como fazer isso pela comunidade &lt;a href=&quot;http://riosulvalley.com.br&quot;&gt;RioSulValley&lt;/a&gt;, me propus a ajudar a criar essa tal página. 
Criamos um grupo onde apenas os interessados em ajudar estavam presentes, eram estes: &lt;a href=&quot;&quot;&gt;Kaio Freitas&lt;/a&gt; - o cara que normalmente toma a frente da comunidade em diversos assuntos; &lt;a href=&quot;&quot;&gt;Ivo Soares&lt;/a&gt; - desenvolvedor atuante na comunidade, e quem mostrou a ideia que usamos para criar a página; Eu - desenvolvedor atuante na comunidade sempre que posso rsrs.&lt;/p&gt;

&lt;p&gt;Com o grupo formado iniciamos o bate papo para criar essa tal página. Com uma ideia, Ivo mostrou uma página que fazia o mesmo que queriamos fazer para o RSV, era a &lt;a href=&quot;http://frontendbr.com.br/eventos/&quot;&gt;página eventos&lt;/a&gt; da comunidade &lt;a href=&quot;http://frontendbr.com.br&quot;&gt;Front-End Brasil&lt;/a&gt;, como é uma comunidade também, o código estava aberto no &lt;a href=&quot;https://github.com/frontendbr/eventos&quot;&gt;github&lt;/a&gt; deles. Sendo assim, carinhosamente fizemos um fork do projeto e iniciamos as alterações.&lt;/p&gt;

&lt;p&gt;No início atuei alterando o front para as cores e conteúdos do RSV, ao finalizar essa parte que em teoria seria a mais simples rsrs, fomos para a parte funcional da página. O Front-End Brasil, pelo próprio nome já se explica é uma comunidade em nível nacional e o RSV é regional, abrangendo todo Sul Fluminense do Rio de Janeiro, com isso precisamos alterar um dos filtros que listava os eventos por ESTADOS. Alteramos este filtro para CIDADES e assim todas as alterações que tinhamos em mente estavam prontas.&lt;/p&gt;

&lt;p&gt;Com o front alterado, o Ivo iniciou sua atuação, preparando tudo que foi desenvolvido para fazendo o build final da aplicação para publicar no github pages do RSV gerando o link &lt;a href=&quot;http://riosulvalley.com.br/eventos&quot;&gt;riosulvalley.com.br/eventos&lt;/a&gt;.&lt;/p&gt;</content><author><name>Leonardo Benedeti</name></author><category term="react" /><category term="webpack" /><category term="css" /><category term="github pages" /></entry><entry><title type="html">Aplicativo Premier Pet</title><link href="http://localhost:4000/app-premier-pet" rel="alternate" type="text/html" title="Aplicativo Premier Pet" /><published>2017-10-26T00:00:00-02:00</published><updated>2017-10-26T17:00:00-02:00</updated><id>http://localhost:4000/app-premier-pet</id><content type="html" xml:base="http://localhost:4000/app-premier-pet">&lt;p&gt;&lt;img src=&quot;assets/img/vision/premier-pet.png&quot; style=&quot;margin:40px auto;&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Este projeto foi bem curto, levou 12h no total para resolver o problema inicial e alguns outros erros.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Problema inicial:&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;“Não conseguimos publicar o app na loja, o painel reclama que o version code está errado, mas não está.”&lt;/p&gt;

  &lt;p&gt;&lt;cite&gt;Vision Comunicação&lt;/cite&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Ao iniciar a analise do porque o GooglePlay não aceitou o apk, solicitei acesso ao painel e o APK em questão que foi recusado.&lt;/p&gt;

&lt;p&gt;Refiz o processo confirmando que o Play não aceitava o apk, fui analisar mais a fundo o binário.&lt;/p&gt;

&lt;p&gt;Existe um processo para verificar detalhes de qualquer apk, chamado &lt;code class=&quot;highlighter-rouge&quot;&gt;aapt&lt;/code&gt;. Ao executar o comando ele retorna todas as informações que o Play extrai para realizar a publicação.&lt;/p&gt;

&lt;p&gt;Como utilizar o aapt:&lt;/p&gt;
&lt;div class=&quot;language-terminal highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt;ANDROID_HOME/buid-tools/[android-version]/aapt dump badging &amp;lt;path-to-apk&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;No meu caso, precisava confirmar o &lt;code class=&quot;highlighter-rouge&quot;&gt;version code&lt;/code&gt;, que de acordo com o painel estava incorreto.&lt;/p&gt;

&lt;p&gt;Para contextualizar um pouco mais, o projeto foi construido com Ionic 1. O framework utiliza um arquivo para suas configurações chamado config.xml, onde abriga todas as configs básicas do app, incluindo a versão do app.&lt;/p&gt;

&lt;p&gt;Quando o projeto Android é criado se baseando nesse arquivo, o script utiliza a versão do app 1.0.0 e converte &lt;code class=&quot;highlighter-rouge&quot;&gt;.&lt;/code&gt; em &lt;code class=&quot;highlighter-rouge&quot;&gt;0&lt;/code&gt;, transformando assim a versão 1.0.0 em 10000.&lt;/p&gt;

&lt;p&gt;Ao verificar o arquivo, já tendo em mente o version code necessário para subida do apk, reparei que apenas o número estava errado, parte por falta de atenção da Vision parte pelo Ionic transformar &lt;code class=&quot;highlighter-rouge&quot;&gt;.&lt;/code&gt; em &lt;code class=&quot;highlighter-rouge&quot;&gt;0&lt;/code&gt; no version code.&lt;/p&gt;

&lt;p&gt;Com isso aconteceu uma confusão com as versões.&lt;/p&gt;

&lt;p&gt;O config.xml ficou com o mesmo 1.0.0(10000) e as alterações foram feitas direto no Android Studio(prática não recomendada já que o Ionic gera os arquivos automaticamente), alterando o Manifest de 10000(1.0.0) para 100001(1.0.01), aumentando assim o version code de 10000(dez mill) para 100001(cem mil e um).&lt;/p&gt;

&lt;p&gt;Em um nova alteração, ajustaram o config.xml como recomendam as docs a cada subida e seguindo a ordem foi alterado de 1.0.0 para 1.0.1, convertendo para o version code 10001(dez mil e um). Ao tentar subir um apk com version code 10001 o GooglePlay reclamou, e com razão, afinal 100001 &amp;gt; 10001.&lt;/p&gt;

&lt;p&gt;A solução então foi incrementar mais um .2 no version code, 1.0.1.2, convertendo para 100002.&lt;/p&gt;

&lt;p&gt;Demorou tanto para encontrar este detalhe pois os commits estavam de acordo, config.xml certinho.&lt;/p&gt;

&lt;p&gt;Mas ao comparar os apks gerados cheguei a essa conclusão, com isso, passei a analise para a Vision e tudo correu normalmente. O app foi publicado com as alterações que precisavam e continua sendo mantido.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://stackoverflow.com/questions/4470139/how-to-get-application-or-package-info-from-the-apk-file-in-the-android-applicat&quot; target=&quot;_blank&quot;&gt;https://stackoverflow….e-in-the-android-applicat&lt;/a&gt;&lt;/p&gt;</content><author><name>Leonardo Benedeti</name></author><category term="android" /><category term="google play" /></entry><entry><title type="html">Aplicativo LATAM CXO Forum Microsoft</title><link href="http://localhost:4000/app-latam-cxo-forum-microsoft" rel="alternate" type="text/html" title="Aplicativo LATAM CXO Forum Microsoft" /><published>2016-08-17T00:00:00-03:00</published><updated>2016-08-17T16:00:00-03:00</updated><id>http://localhost:4000/app-latam-cxo-forum-microsoft</id><content type="html" xml:base="http://localhost:4000/app-latam-cxo-forum-microsoft">&lt;p&gt;&lt;img src=&quot;assets/img/vision/latam-cxo.png&quot; style=&quot;margin:40px auto;&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Projeto feito em parceria com a Agência Doctor Web e Vision Comunicação, o app tem como meta informar o participante do evento os itens necessários para que o mesmo se guie durante os dias, transitando entre palestras, oficinas e uma aba social, onde você podia se conectar com outros participantes do evento gerando um networking amplo.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Atuações:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Ajuste no fluxo de ações do módulo social, onde você se conecta com outros participantes, tal qual o app Tinder.&lt;/li&gt;
  &lt;li&gt;Criação de um feed de tweets gerenciados por uma api criada pela empresa Vision Comunicação.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;O aplicativo foi desenvolvido nativamente com a linguagem Java e as consultas eram feitas em um server dentro do Azure(antes de se chamar oficialmente azure rsrs).&lt;/p&gt;

&lt;p&gt;O aplicativo era publicado com o bundle base da Vision, atualmente ele não está mais online pela Vision.&lt;/p&gt;

&lt;p&gt;Encontrei algumas referencias do app pelo titio Google:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://apkpure.com/ar/latam-cxo-government-forum/com.vision.cxo&quot; target=&quot;_blank&quot;&gt;Apk Pure&lt;/a&gt; - Aparentemente uma página que baixa os apks do GooglePlay - Não arrisquei baixar não rsrs&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.behance.net/gallery/65302281/Microsoft-Latam-CXO&quot; target=&quot;_blank&quot;&gt;Behance - Eduardo Zilio&lt;/a&gt; - Aparentemente quem criou toda experiência e design do app&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Leonardo Benedeti</name></author><category term="android" /><category term="google play" /></entry><entry><title type="html">Site Institucional - Conception</title><link href="http://localhost:4000/site-conception" rel="alternate" type="text/html" title="Site Institucional - Conception" /><published>2016-07-01T00:00:00-03:00</published><updated>2016-07-01T16:00:00-03:00</updated><id>http://localhost:4000/site-conception</id><content type="html" xml:base="http://localhost:4000/site-conception">&lt;p&gt;&lt;img src=&quot;assets/img/conception/imagem-post.png&quot; style=&quot;margin:40px auto;&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Site institucional da empresa Conception, destacando seus cases de sucesso e sempre com fotos de muita qualidade destacando o que foi feito, seja eventos, branding ou aplicativos.&lt;/p&gt;

&lt;p&gt;O site foi criado utilizando HTML5, CSS3 e PHP em alguns casos, além disso para automatizar as tarefas de build, release, minificação de código e outros foi utilizado o GRUNT.&lt;/p&gt;

&lt;p&gt;Quando cheguei na empresa o site já estava construído e eu era responsável por manter online, ajustar erros e incrementar novos cases.&lt;/p&gt;

&lt;h2 id=&quot;cases&quot;&gt;Cases:&lt;/h2&gt;

&lt;hr /&gt;
&lt;div class=&quot;grid&quot;&gt;
    &lt;div class=&quot;a img&quot;&gt;
    &lt;img src=&quot;assets/img/conception/tim-convencao-nacional.png&quot; alt=&quot;&quot; /&gt;
    &lt;/div&gt;
    &lt;div class=&quot;b text&quot;&gt;
    &lt;h3&gt;CONVENÇÃO NACIONAL DE VENDAS 2016&lt;br /&gt;TIM&lt;/h3&gt;
    &lt;span&gt;
        Evento interno realizado para a área de vendas da TIM em 2016.&lt;br /&gt;
        &lt;a href=&quot;http://conception.com.br/convencaotim2016.html&quot; target=&quot;_blank&quot;&gt;Ver case&lt;/a&gt;
    &lt;/span&gt;
    &lt;/div&gt;
&lt;/div&gt;
&lt;hr /&gt;
&lt;div class=&quot;grid&quot;&gt;
    &lt;div class=&quot;a text&quot;&gt;
        &lt;h3&gt;LANÇAMENTO DA NOVA MARCA&lt;br /&gt;TIM&lt;/h3&gt;
        &lt;span&gt;
            O evento de lançamento da nova marca com o novo lema da TIM: evoluir é fazer diferente.&lt;br /&gt;
            &lt;a href=&quot;http://conception.com.br/coletivatim2016.html&quot; target=&quot;_blank&quot;&gt;Ver case&lt;/a&gt;
        &lt;/span&gt;
    &lt;/div&gt;
    &lt;div class=&quot;b img&quot;&gt;
        &lt;img src=&quot;assets/img/conception/tim-nova-marca.png&quot; alt=&quot;&quot; /&gt; 
    &lt;/div&gt;
&lt;/div&gt;
&lt;hr /&gt;
&lt;div class=&quot;grid&quot;&gt;
    &lt;div class=&quot;a img&quot;&gt;
        &lt;img src=&quot;assets/img/conception/jj-laf.png&quot; alt=&quot;&quot; /&gt;
    &lt;/div&gt;
    &lt;div class=&quot;b text&quot;&gt;
    &lt;h3&gt;LATIN AMERICAN FORUM 2015&lt;br /&gt;ETHICON | JOHNSON &amp;amp; JOHNSON&lt;/h3&gt;
    &lt;span&gt;
        O LAF é um evento promovido pela Ethicon que reúne cirurgiões de diferentes países em busca de procedimentos revolucionários e as melhores soluções médicas.&lt;br /&gt;
        &lt;a href=&quot;http://conception.com.br/laf2015.html&quot; target=&quot;_blank&quot;&gt;Ver case&lt;/a&gt;
    &lt;/span&gt;
    &lt;/div&gt;
&lt;/div&gt;
&lt;hr /&gt;
&lt;div class=&quot;grid&quot;&gt;
    &lt;div class=&quot;a text&quot;&gt;
        &lt;h3&gt;FUTURECOM 2015&lt;br /&gt;TIM&lt;/h3&gt;
        &lt;span&gt;
            Stand montado com presença de destaque na maior feira de telecomunicações e TI da América Latina.&lt;br /&gt;
            &lt;a href=&quot;http://conception.com.br/futurecom2015.html&quot; target=&quot;_blank&quot;&gt;Ver case&lt;/a&gt;
        &lt;/span&gt;
    &lt;/div&gt;
    &lt;div class=&quot;b img&quot;&gt;
        &lt;img src=&quot;assets/img/conception/tim-futurecom.png&quot; alt=&quot;&quot; /&gt; 
    &lt;/div&gt;
&lt;/div&gt;
&lt;hr /&gt;
&lt;div class=&quot;grid&quot;&gt;
    &lt;div class=&quot;a img&quot;&gt;
        &lt;img src=&quot;assets/img/conception/interfarma-branding.png&quot; alt=&quot;&quot; /&gt;
    &lt;/div&gt;
    &lt;div class=&quot;b text&quot;&gt;
    &lt;h3&gt;BRANDING&lt;br /&gt;INTERFARMA&lt;/h3&gt;
    &lt;span&gt;
        Construção de uma nova marca que reflita e mantenha a credibilidade depositada a Interfarma pelo seu público.&lt;br /&gt;
        &lt;a href=&quot;http://conception.com.br/interfarma.html&quot; target=&quot;_blank&quot;&gt;Ver case&lt;/a&gt;
    &lt;/span&gt;
    &lt;/div&gt;
&lt;/div&gt;</content><author><name>Leonardo Benedeti</name></author><category term="HTML" /><category term="CSS" /><category term="GRUNT" /><category term="PHP" /></entry><entry><title type="html">TIM - Precificador Digital</title><link href="http://localhost:4000/tim-precificador-digital" rel="alternate" type="text/html" title="TIM - Precificador Digital" /><published>2016-04-25T00:00:00-03:00</published><updated>2016-04-25T16:00:00-03:00</updated><id>http://localhost:4000/tim-precificador-digital</id><content type="html" xml:base="http://localhost:4000/tim-precificador-digital">&lt;p&gt;&lt;img src=&quot;assets/img/conception/tim-precificador-digital.png&quot; style=&quot;margin:40px auto;&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Aplicativo criado com o intuito de substituir as plaquinhas de preço das lojas, que constantemente estão desatualizadas. 
O App funciona junto a uma api que envia para os devices os preços atualizados no momento e o cliente da loja que possui o app está sempre atualizada.&lt;/p&gt;

&lt;p&gt;Também atuei em duas frentes nesse projeto, API e APP.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;API&lt;/li&gt;
  &lt;li&gt;APP&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;api&quot;&gt;API&lt;/h3&gt;
&lt;p&gt;Criada utilizando PHP com o framework CakePhp e para atualizar os apps, emitia uma carga de informação de acordo com a demanda do gerente de vendas da região.&lt;/p&gt;

&lt;p&gt;Atuei em ajustes simples de conteúdo e versionamento de pacotes para atualização dos devices.&lt;/p&gt;

&lt;h3 id=&quot;app&quot;&gt;APP&lt;/h3&gt;
&lt;p&gt;Criado utilizando Java, tendo como funcionalidade básica a busca de informações de preço relativo ao device.&lt;/p&gt;

&lt;p&gt;Ex.: ao abrir o app em um Motorola One, a promoção vigente referente ao aparelho seria mostrada.&lt;/p&gt;

&lt;p&gt;Atuei em bugs e melhorias de layout do app, na maior parte das vezes bem simples como tamanho de fonte e posicionamento. Mas em um caso específico precisamos investigar e testar muito a fundo um problema relatado pelo cliente: Telas dos devices queimando pelo layout ser estático. Efeito Burn-In comum em androids devido a barra fixa de ação, botão voltar, home e lista de apps. No caso do nosso app como o layout era estático como a barra comentada, queimava a tela com a promoção do device. Não era legal mesmo.&lt;/p&gt;

&lt;p&gt;ex.:
&lt;img src=&quot;assets/img/conception/pd-tim-burn-in.png&quot; style=&quot;margin:20px auto;&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;A solução para isso foi tornar o conteúdo da promoção móvel, assim como proteções de telas de televisões e computadores. 
A equipe de criação e design criou um novo layout mantendo a tela sempre alterando os valores de cores dos pixels da tela.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;O desenho pode não estar 100% mas vai fazer sentido com a explicação abaixo rsrs&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;O app tinha um espaço para o conteúdo da promoção bater nos cantos. Dinamicamente ele traçava uma reta para cada próximo canto. Assim o conteúdo alternava a posição constantemente. Nunca batendo no mesmo ponto da tela.&lt;/p&gt;

&lt;p&gt;Já o fundo precisavamos alternar as cores pra garantir que a tela mantivesse sua vida útil intacta. 
Foi pensado 5 imagens usando um gradiente entre cores escuras e claras para sempre manter o pixel alternando o estado.&lt;/p&gt;

&lt;p&gt;ex.: 
&lt;img src=&quot;assets/img/conception/pd-tim-bg-example.png&quot; style=&quot;margin:20px auto;&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;O app alternava entre essas imagens e o fundo girava no próprio eixo, assim mantendo o pixel sempre trabalhando e evitando que o mesmo queimasse em uma cor específica marcando a tela.&lt;/p&gt;

&lt;p&gt;Infelizmente pouco tempo após esses ajustes para a tela não queimar mais a tim descontinuou o projeto e não é mais utilizado.
A Apple é uma loja que utiliza algo parecido.&lt;/p&gt;</content><author><name>Leonardo Benedeti</name></author><category term="Android" /><category term="PHP" /></entry><entry><title type="html">App TIM Menu</title><link href="http://localhost:4000/app-tim-menu" rel="alternate" type="text/html" title="App TIM Menu" /><published>2016-03-21T00:00:00-03:00</published><updated>2016-07-01T16:00:00-03:00</updated><id>http://localhost:4000/app-tim-menu</id><content type="html" xml:base="http://localhost:4000/app-tim-menu">&lt;p&gt;&lt;img src=&quot;assets/img/conception/app-tim-menu.png&quot; style=&quot;margin:40px auto;&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Neste projeto atuei em duas frentes com pequenos ajustes, visto que era desenvolvedor WEB na época. =D&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;API&lt;/li&gt;
  &lt;li&gt;APP&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;api&quot;&gt;API&lt;/h3&gt;

&lt;p&gt;A api é construida com PHP puro e ela retorna se o app está ou não com o conteúdo desatualizado. Estando desatualizado ele retorna um link de um .zip com as informações e imagens para tal atualização.&lt;/p&gt;

&lt;p&gt;Constantemente precisavamos incrementar informações no .zip e consequentemente o código da versão para o app se atualizar.&lt;/p&gt;

&lt;h3 id=&quot;app&quot;&gt;APP&lt;/h3&gt;

&lt;p&gt;No aplicativo atuei também muito pouco mas atuei em ambas plataformas: iOS e Android.&lt;/p&gt;

&lt;h5 id=&quot;ios---obj-c&quot;&gt;iOS - Obj-C&lt;/h5&gt;

&lt;p&gt;No iOS eu ajustei feed de informações do twitter, usando a propria api da rede social, adaptando apenas o layout dos twits a identidade do app. E os clicks dos posts do facebook direcionando para os posts na página.&lt;/p&gt;

&lt;h4 id=&quot;android---java&quot;&gt;Android - Java&lt;/h4&gt;

&lt;p&gt;O app precisa mostrar varios apps em grids. Em uma determinada resolução mostravam apenas 3 e não 4 como deveria ser. 
Para resolver incluí um novo dimens.xml para a resolução tvdpi, não lembro agora qual device era. Mas era o clássico problema que algum gerente tinha o device e precisava ser ajustado rsrsrs&lt;/p&gt;

&lt;p&gt;Infelizmente não tenho prints desses ajustes. Imagino que o app ainda seja mantido pela Conception e esteja funcionando. =D&lt;/p&gt;</content><author><name>Leonardo Benedeti</name></author><category term="Android" /><category term="iOS" /><category term="PHP" /></entry><entry><title type="html">Nota Boleto - Coca Cola</title><link href="http://localhost:4000/nota-boleto-coca-cola" rel="alternate" type="text/html" title="Nota Boleto - Coca Cola" /><published>2013-04-20T00:00:00-03:00</published><updated>2016-08-17T16:00:00-03:00</updated><id>http://localhost:4000/nota-boleto-coca-cola</id><content type="html" xml:base="http://localhost:4000/nota-boleto-coca-cola">&lt;p&gt;&lt;img src=&quot;assets/img/coca/coca-porto-real.jpg&quot; style=&quot;margin:40px auto;&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Motivo do projeto: Com boleto e notas fiscais sendo gerado em ambientes diferentes, o setor de conferência de pedidos precisava, toda manhã antes de liberar as entregas, imprimir todos os boletos em um servidor, notas fiscais em outro, folhear as duas pilhas e unir boleto com a nota fiscal do pedido do Bar do Zé, grampear e liberar para entrega.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;Um processo manual e trabalhoso demais.&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;O projeto consistiu em buscar numa base de dados em um AS400, informações de notas fiscais e no SAP, boletos referentes a pedidos efetuados pelos clientes da unidade CiaFlu.&lt;/p&gt;

&lt;p&gt;Para auxiliar o projeto, foi comprada uma nova impressora que ao finalizar a impressão de um documento com mais de uma página, ela grampeava as páginas. &lt;strong&gt;WOW&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Com as duas informações em mãos e a impressora esperando, bastava unir tudo em um único arquivo e enviar para impressão.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;Moleza rsrsrs&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;A integração foi feita em Java buscando as informações e enviando para o SAP mostrando em um report customizado mostrando a lista a ser impressa.&lt;/p&gt;

&lt;p&gt;Com esse processo todo automatizado, o analista agora podia apenas conferir as notas e boletos, já impressos e grampeados, e direcionar para o fluxo de entrega de um modo mais garantido, evitando erros manuais que aconteciam com frequência.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Outras informações&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Com a compra da CiaFlu pela FEMSA, o ABAP foi descontinuado, por eles utilizarem o SAP sem customizações.&lt;/p&gt;

&lt;p&gt;Com essa rescisão precisei decidir o que fazer e depois de pensar muito, comprei um MacBook e migrei para o desenvolvimento mobile. A outra opção seria fazer a Academia SAP, mas o mundo mobile estava crescendo e tomei a direção que achei mais interessante. =D&lt;/p&gt;</content><author><name>Leonardo Benedeti</name></author><category term="SAP" /><category term="AS400" /><category term="Java" /></entry></feed>